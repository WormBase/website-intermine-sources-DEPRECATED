#!/usr/bin/perl

# script to download go annotation files

# This script gets the latest Uniprot go-annotation release into a directory
# like go-annotation/uniprot/2005-06-09.
# The date used in the directory name is the date on the file on the
# FTP server 

# The script also gets the latest go association files for fly and worm from
# godatabase.org into go-annotation/flybase and go-annotation/wormbase

use strict;
use warnings;

BEGIN {
  # find the lib directory by looking at the path to this script
  push (@INC, ($0 =~ m:(.*)/.*:)[0] . '/../../intermine/perl/lib/');
}
use InterMine::DataDownloader;

#Define ARGVs
my ($logdir,$logname,$home,$file);
if(@ARGV!=4){
	die "Wrong number of ARGVs!\nget_all.sh should supply the log directory, temporary log name, /shared/data/ and config file.\n";
}else{
	$logdir = $ARGV[0];
	$logname= $ARGV[1];
	$home = $ARGV[2];
	$file = $ARGV[3];
}

#data source
my $uniprot_go_server = "ftp.ebi.ac.uk";
my $uniprot_go_dir = "pub/databases/GO/goa/UNIPROT";
my $goa_file = "gene_association.goa_uniprot";
my $goa_file_gz = "$goa_file.gz";

# taxon IDs that should be grepped out of the $goa_file and the suffix to use
# when creating the output file
my %taxon_map = &config_species($file,"go_taxon");

my $godatabase_server = "ftp.geneontology.org";
my $godatabase_dir = "pub/go/gene-associations";
my $go_dir = "pub/go/ontology";
my $go_file = "gene_ontology.obo";
my $username = "anonymous";
my $password = "-anonymous\@";
my $current_dir = "$home/go-annotation/current";

# the key is the name of the directory to put the gene association file in, the
# suffix is used to find the file on the server
my %gene_association_map = &config_species($file,"go_assoc");
my $date = &convert_date();

# Get latest version of the gene ontology - is updated every 30 mins
my $go_connection = &ftp_connect($godatabase_server,$username,$password);
$go_connection->cwd($go_dir)
	or die "Cannot change working directory ", $go_connection->message;

my $go_download_dir = "$home/go-annotation";
&checkdir_exists($go_download_dir);
&checkdir_exists($current_dir);

&ftp_download($go_connection,$go_download_dir,$go_file);
$go_connection->quit;

my $log_buffer = "Go Annotation\ngene_ontology.obo updated to $go_download_dir\n";
my $go_version_buffer = "Gene Ontology\n$date\nThe Gene Ontology\nhttp://www.geneontology.org";
&write_version($go_download_dir,$go_version_buffer);

### Get goa files if any taxon ids configured
if (%taxon_map) {


    my $goa_connection = &ftp_connect($uniprot_go_server,$username,$password);
    $goa_connection->cwd($uniprot_go_dir)
	or die "Cannot change working directory ", $goa_connection->message;

#use the date stamp of the uniprot goa file to create a version id for the output directory
    my $uniprot_date_string = &date_string_file($goa_connection,$goa_file_gz);

# make uniprot directory if necessary and download file
    my $uniprot_dir = "$home/go-annotation/uniprot";
    my $uniprot_download_dir = "$uniprot_dir/$uniprot_date_string";
    my $uniprot_link = "$home/go-annotation/uniprot/current";
    
    &checkdir_exists($uniprot_dir);
    if(&checkdir_exists($uniprot_download_dir)==1){
  	&ftp_download($goa_connection,$uniprot_download_dir,$goa_file_gz);
	&ftp_download($goa_connection,$uniprot_download_dir,"README");
	&unzip_dir($uniprot_download_dir);
  	
  	open GOA_FILE, "$uniprot_download_dir/$goa_file"
		or die "can't open $uniprot_download_dir/$goa_file";
  
 	#put the lines from the taxons we are interested in into separate buffers
	print "Filling taxon buffers...\n";
  	while (my $line = <GOA_FILE>) {
    	for my $taxon_id (keys %taxon_map) {
        	if ($line =~ /\ttaxon\:$taxon_id\t/) {
            	push @{$taxon_map{$taxon_id}{lines}}, $line;
        	}
    	}
	}
	close GOA_FILE or die;
        
        rename("$uniprot_download_dir/$goa_file", "$uniprot_download_dir/downloaded_$goa_file");
        
	#print each buffer out to a file
	print "writing files\n";
	for my $taxon_id (keys %taxon_map) {
		my $suffix = $taxon_map{$taxon_id}{suffix};  
		my $unsorted = "$uniprot_download_dir/unsorted_$suffix";
		my $sorted = "$uniprot_download_dir/gene_association_$suffix";
		
		open OUT_FILE, ">$unsorted"
        	or die "can't open $unsorted for writing\n";
      	
		for my $line (@{$taxon_map{$taxon_id}{lines}}) {
      		print OUT_FILE $line;
    	}
		close OUT_FILE or die;
		
		#sort the file based on the second column (-k 2,2), output written to $sorted (-o)
		system "sort -o $sorted -k 2,2 $unsorted";
		unlink $unsorted;
		
		$log_buffer .= "$sorted updated into $uniprot_download_dir\n";
		my $goa_version_buffer = "GO annotations for A. gambiae, A. mellifera\n$uniprot_date_string\nGene Ontology assignemnts from Uniprot GOA\nhttp://www.geneontology.org/GO.current.annotations.shmtl\n";
		&write_version($uniprot_dir,$goa_version_buffer);
	}
	
	#make links for the current data
	&make_link($uniprot_date_string,$uniprot_link);
	my $go_uniprot_link = "$current_dir/uniprot";
	my $go_link_dir = "../uniprot/$uniprot_date_string";
	&make_link($go_link_dir,$go_uniprot_link);
	system "chmod -R a+r,g+w $uniprot_download_dir";
    }else {
        warn " current uniprot version up to date - skipping download\n";
	$log_buffer .= "$uniprot_dir up to date\n";
    }
    $goa_connection->quit;
}

#### Get other gene association files 
# use a new connection in case $go_connection is timed out while the uniprot
# files are processed.
my $assoc_connection = &ftp_connect($godatabase_server,$username,$password);
$assoc_connection->cwd($godatabase_dir)
	or die "Cannot change working directory ", $go_connection->message;

#download file for each organism in the gene association map
for my $source_database (keys %gene_association_map) {
	my $suffix = $gene_association_map{$source_database}{suffix};
	my $gene_association_file_gz = "gene_association.$suffix.gz";
	my $date_string = &date_string_file($assoc_connection,$gene_association_file_gz);
  
	# create directory for source if necessary
	my $source_dir = "$home/go-annotation/$source_database";
	&checkdir_exists($source_dir);
	my $source_dir_link = "$source_dir/current";
	
	#create download directory and download if necessary
	my $gene_association_download_dir = "$source_dir/$date_string";
	if(&checkdir_exists($gene_association_download_dir)==1){
		&ftp_download($assoc_connection,$gene_association_download_dir,$gene_association_file_gz);
		&unzip_dir($gene_association_download_dir);
    	
		#sort the file based on the second column
		my $unsorted = "$gene_association_download_dir/unsorted.$suffix";
		my $sorted = "$gene_association_download_dir/gene_association.$suffix";
		#create $unsorted
		rename($sorted, $unsorted) or die "Cannot rename $sorted: $!";
		#the sort command writes the output of sorting $unsorted to $sorted
		system "sort -o $sorted -k 2,2 $unsorted";
		unlink $unsorted;
		
		#make links to current data
		&make_link($date_string,$source_dir_link);
		my $current_link = "$current_dir/$source_database";
		my $current_link_dir = "../$source_database/$date_string";
		&make_link($current_link_dir,$current_link);
		
		$log_buffer .= "gene_association.$suffix updated to $gene_association_download_dir\n";
		my $version_buffer = "GO annotations for D. melanogaster, M. musculus, S. cerevisiae and C. elegans\n$date_string\nGene Ontology assignments from the Gene Ontology Site\nhttp://www.geneontology.org/GO.current.annotations.shmtl\n";
		&write_version($source_dir,$version_buffer);
		
		system "chmod -R a+r,g+w $gene_association_download_dir";
	}else {
		warn " current $source_database version up to date - skipping download\n";
		$log_buffer .= "$source_dir up to date\n";
	}
}
$assoc_connection->quit;

$log_buffer .= "\n";
&write_log($log_buffer,$logdir,$logname);

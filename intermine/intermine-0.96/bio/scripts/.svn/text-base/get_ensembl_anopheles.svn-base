#!/usr/bin/perl

use strict;
use warnings;
use File::Basename;

use constant {
    # ensembl ftp site settings
    USER         => 'anonymous',
    PASS         => '-anonymous@',
    SERVER       => "ftp.ensemblgenomes.org",
    RELEASES_DIR => "pub/metazoa/current/mysql",
};

BEGIN {
    # find the lib directory by looking at the path to this script
    use lib dirname($0) . '/../../intermine/perl/InterMine-Util/lib';
}
use InterMine::Util::DataDownloader;

#Define ARGVs
my ( $data_dir, $organisms, $database_name );
if ( @ARGV != 3 ) {
    die
"Wrong number of arguments: DATA_DIRECTORY ORGANISM_NAME WHICH_DATABASE \nPlease supply the organism name, the download desination directory, and which data you want to download (core or variation)\n eg /data/ensembl mus_musculus core\nThe organism name must match the ensembl filenames, as this is the search string the script uses.\nThe data will be saved to the directory for this organism, eg /data/ensembl/mus_musculus core ";
}
else {
    $data_dir      = $ARGV[0];
    $organisms     = $ARGV[1];
    $database_name = $ARGV[2];
}


# -------- access ftp server ------------- #
my $ftp = ftp_connect(SERVER, USER, PASS );

$ftp->cwd(RELEASES_DIR)
  or die "Cannot change working directory ", $ftp->message;

# get list of all directories
my @dir_list = $ftp->ls();

my @organism_names = split( /,/, $organisms );

for my $organism_name (@organism_names) {

    # TODO download variation db too
    my $species_re = qr/^ $organism_name _ $database_name _/x;

    my ($species_dir) = grep {/$species_re/} @dir_list
        or (print "No data found for $organism_name\n" and next);

    $ftp->cwd($species_dir)
      or die "Cannot change into ", RELEASES_DIR, "/$species_dir", $ftp->message;

    my ($version) = $species_dir =~ /$species_re(.*)/g;

    my $download_dir = get_download_path($data_dir, $organism_name, $species_dir);

    if ( not -d $download_dir ) {

        make_download_dir($download_dir);

        # download all files
        ftp_download($ftp, $download_dir, $_) for ($ftp->ls());

        # unzip files
        unzip_dir($download_dir);

        print "Successfully completed download of data for $organism_name:",
            "\n", "Now at version $version", "\n" x 2;

    }
    else {
        print "$organism_name:\nUp to date - latest version is $version\n\n";
    }

    # move back up to main directory, just in case we are still looping
    $ftp->cwd("../")
      or die "Cannot change back to ", RELEASES_DIR, $ftp->message;
}


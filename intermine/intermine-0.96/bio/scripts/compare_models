#!/usr/bin/perl

# compare two model.xml files

use InterMine::Model;

if (@ARGV != 2) {
  die "$0: needs arguments - the names of the two XML files to compare\n eg, /home/guest/svn/dev/flymine/dbmodel/build/model/genomic_model.xml /home/guest/svn/dev/flymine/dbmodel/build/model/so_model.xml";
}

my $f1 = $ARGV[0];
my $f2 = $ARGV[1];

my $model1 = new InterMine::Model(file => $f1);
my $model2 = new InterMine::Model(file => $f2);

my $model1_diff = read_model($model1,$model2);
my $model2_diff = read_model($model2,$model1);

# for model file, loop through all classes and see if they are in the 
# other model.  if so, compare collections
sub read_model
{
  my (@diff, @same);
  my $not_found_count = 0;
  my $i = 0;
  my ($model1, $model2) = @_;
  @cds = $model1->get_all_classdescriptors();

  foreach (@cds) {
      my $cd = $_;
      $i++;
      # is class in other model?
      my $cd_name =  $cd->name();
      if ($model2->get_classdescriptor_by_name($cd_name)) {
	  push(@same, $cd_name);
      } else {
	  push(@diff, $cd_name);
	  $not_found_count++;
      }
  }
  
  my @sorted_same = sort @same;
  my @sorted_diff = sort @diff;

  print "MODEL:  " . $model2->model_name() . "\n";
  print "comparing to: " . $model1->model_name() . "\n\n";
  print $not_found_count . " of " . $i . " classes in " . $model1->model_name() . " NOT found in " . $model2->model_name() . "\n\n";
  foreach (@sorted_diff) {
      my $cd = $_;
      print $cd . "\n";
  }
  print '-' x 70, "\n";
}





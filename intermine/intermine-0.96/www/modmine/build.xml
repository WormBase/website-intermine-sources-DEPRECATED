<project name="modmine-www" default="transform-site" basedir=".">

  <property name="common" location="../common"/>
  <property name="common.lib" location="${common}/lib"/>
  <property name="common.scripts" location="${common}/scripts"/>
  <property name="src.www" location="site"/>
  <property name="common.src.www" location="${common}/site"/>
  <property name="src.doc" location="../../modmine/doc"/>
  <property name="library.xml.basedir" location="../../imbuild"/>
  <property name="build.www" location="build"/>
  <property name="build.webapp.manual.html" location="dist/doc/manual"/>
  <property name="dist.www" location="dist"/>
  <property name="xslt" location="xslt"/>
  <property name="common.xslt" location="${common}/xslt"/>
  <property name="cache.dtd" location="${common}/dtd"/>
  <property name="output.extension" value="shtml"/>
  <property name="branding" value="modmine"/>

  <path id="xslt.class.path">
    <fileset dir="${library.xml.basedir}/im-ant-tasks/lib" includes="*.jar"/>
  </path>

  <target name="-set-release-suffix-exists" if="release">
    <property name="release-suffix" value=".${release}"/>
  </target>

  <target name="-set-release-suffix-not-exists" unless="release">
    <!-- default to no suffix -->
    <property name="release-suffix" value=""/>
  </target>

  <target name="-init" depends="-set-release-suffix-exists, -set-release-suffix-not-exists"/>

  <target name="prepare" depends="-init">
    <property name="runtime.properties.base" value="${user.home}/.intermine/modmine.properties" />
    <property name="runtime.properties" value="${runtime.properties.base}${release-suffix}" />
    <condition property="runtime.properties.exists">
      <available file="${runtime.properties}"/>
    </condition>
    <fail message="${runtime.properties} not found" unless="runtime.properties.exists"/>

    <property file="${runtime.properties}"/>

    <copy todir="${build.www}">
      <fileset dir="${src.www}">
        <include name="**/*"/>
      </fileset>
      <fileset dir="${common.src.www}">
        <include name="**/*"/>
      </fileset>
    </copy>

    <copy file="rss.xml" todir="${dist.www}"/>
    <copy file="${src.www}/robots.txt" todir="${dist.www}"/>

    <copy todir="${dist.www}">
      <fileset dir="${src.www}">
        <include name="images/*"/>
        <include name="favicon.ico"/>
      </fileset>
    </copy>

    <copy todir="${dist.www}">
      <fileset dir="${src.www}">
        <include name="style/*"/>
      </fileset>
    </copy>

    <copy todir="${dist.www}">
      <fileset dir="${src.www}">
        <include name="js/*"/>
      </fileset>
    </copy>
  </target>

  <target name="style-site" depends="prepare">
    <xslt basedir="${src.www}/" destdir="${dist.www}" extension=".${output.extension}"
           style="${common.xslt}/new.xsl"
           force="false">
      <classpath refid="xslt.class.path"/>
      <include name="**/*.html"/>
      <exclude name="help/tour/*"/>
      <exclude name="help/tutorials/*"/>
      <exclude name="help/whatcanidoonthispage/*"/>
      <param name="branding" expression="${branding}" />
      <param name="basedir" expression="${project.sitePrefix}" />
      <param name="webappprefix" expression="${webapp.baseurl}/${webapp.path}"/>
      <param name="projectcontact" expression="${project.contact}"/>
      <param name="releaseversion" expression="${project.releaseVersion}"/>
      <param name="webapppath" expression="${webapp.path}"/>
      <param name="outputext" expression="${output.extension}" />
    </xslt>
  </target>

  <target name="generate-help" depends="prepare"
          description="Generate html for tour and copy images to build directory">

     <mkdir dir="${dist.www}/help"/>

     <exec executable="${common.scripts}/process_help.pl">
       <arg value="${src.www}/help/whatcanidoonthispage/whatcanido.html"/>
       <arg value="modMine Help"/>
       <arg value="${dist.www}/help"/>
     </exec>

    <copy todir="${dist.www}/help/">
      <fileset dir="${src.www}/help/whatcanidoonthispage">
        <include name="*.png"/>
        <include name="*.gif"/>
      </fileset>
    </copy>
  </target>

  <target name="generate-tour" depends="prepare"
          description="Generate html for tour and copy images to build directory">
     <mkdir dir="${dist.www}/help/tour"/>

     <exec executable="${common.scripts}/process_help.pl">
       <arg value="${src.www}/help/tour/tour.txt"/>
       <arg value="modMine Tour"/>
       <arg value="${dist.www}/help/tour"/>
     </exec>

    <copy todir="${dist.www}/help/tour">
      <fileset dir="${src.www}/help/tour">
        <include name="*.png"/>
        <include name="*.gif"/>
      </fileset>
    </copy>
  </target>

  <target name="generate-tutorials" depends="prepare"
          description="Generate html for tour and copy images to build directory">
     <mkdir dir="${dist.www}/help/tutorial1"/>
     <mkdir dir="${dist.www}/help/tutorial2"/>

     <exec executable="${common.scripts}/process_help.pl">
       <arg value="${src.www}/help/tutorials/tutorial1/tutorial1-lists.txt"/>
       <arg value="modMine Tutorial 1: Creating and using lists"/>
       <arg value="${dist.www}/help/tutorial1/"/>
     </exec>

     <exec executable="${common.scripts}/process_help.pl">
       <arg value="${src.www}/help/tutorials/tutorial2/tutorial2.txt"/>
       <arg value="modMine Tutorial 2: Using the QueryBuilder and Editing Templates"/>
       <arg value="${dist.www}/help/tutorial2/"/>
     </exec>

    <copy todir="${dist.www}/help/tutorial1">
      <fileset dir="${src.www}/help/tutorials/tutorial1">
        <include name="*.png"/>
        <include name="*.gif"/>
      </fileset>
    </copy>

    <copy todir="${dist.www}/help/tutorial2">
      <fileset dir="${src.www}/help/tutorials/tutorial2">
        <include name="*.png"/>
        <include name="*.gif"/>
      </fileset>
    </copy>
  </target>


  <target name="generate-sitemap" depends="prepare"
          description="Generate sitemap for website">

     <exec executable="${common.scripts}/sitemap_gen.pl">
          <arg value="${dist.www}"/>
     </exec>
  </target>

  <!-- site isn't currently validated - the webapp header includes the <head> element
       and this is read by SSI, so files in dist don't validate. -->
  <target name="validate-site-xhtml"
          depends="style-site">
    <xmlvalidate warn="yes">
      <fileset dir="${dist.www}" includes="**/*.shtml">
        <exclude name="images/index.html"/>
        <exclude name="stats.html"/>
        <exclude name="what.shtml"/>
        <exclude name="**/tour*.html"/>
        <exclude name="graphics/index.html"/>
        <exclude name="sources-table.html"/>
        <exclude name="html/**/*"/>
      </fileset>
      <xmlcatalog>
        <dtd
          publicId="-//W3C//DTD XHTML 1.0 Transitional//EN"
          location="${cache.dtd}/xhtml1-transitional.dtd"/>
        </xmlcatalog>
   </xmlvalidate>
  </target>

  <target name="transform-site"
          depends="style-site, validate-site-xhtml"
          description="Transform the website contents from XML to HTML"/>




  <target name="release-www" depends="style-site, generate-tour, generate-help, generate-tutorials, generate-sitemap"
          description="releases the static website to the webserver">
    <fixcrlf srcdir="${dist.www}"
       eol="crlf"
       includes="**/*.css"/>
    <chmod perm="a+r" type="file">
      <fileset dir="${dist.www}">
        <include name="**/**" />
      </fileset>
    </chmod>
    <chmod perm="a+rx" type="dir">
      <fileset dir="${dist.www}">
        <include name="**/**" />
      </fileset>
    </chmod>
    <exec executable="rsync">
      <arg line="-e ssh -Cavz --exclude api --exclude tmp --exclude gbrowse --delete ${dist.www}/ ${www.serverlocation}/" />
    </exec>
  </target>

  <target name="clean">
    <delete dir="${build.www}"/>
    <delete dir="${dist.www}"/>
  </target>
</project>

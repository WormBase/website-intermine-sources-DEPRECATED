#precompute.query.1 = SELECT a1_.start AS a2_, a1_.end AS a3_, a1_.strand AS a4_, a6_ \
#                     FROM org.intermine.model.bio.Location AS a1_, \
#                     org.intermine.model.bio.Chromosome AS a5_, \
#                     org.intermine.model.bio.BioEntity AS a6_ \
#                     WHERE (a1_.object CONTAINS a5_ AND a1_.subject CONTAINS a6_)

# FlyAtlas widget query
precompute.query.1 = SELECT a1_.affyCall AS a4_, a2_.name AS a5_, a3_.identifier AS a6_, a3_.id as a7_ FROM org.intermine.model.bio.FlyAtlasResult AS a1_, org.intermine.model.bio.MicroArrayAssay AS a2_, org.intermine.model.bio.Gene AS a3_ WHERE (a1_.genes CONTAINS a3_ AND a1_.assays CONTAINS a2_) ORDER BY a3_.id

precompute.query.2 = SELECT a3_ FROM org.intermine.model.bio.FlyAtlasResult AS a1_, org.intermine.model.bio.MicroArrayAssay AS a2_, org.intermine.model.bio.Gene AS a3_ WHERE (a1_.genes CONTAINS a3_ AND a1_.assays CONTAINS a2_)

precompute.query.3 = SELECT a3_.identifier AS a1_, a4_.identifier AS a2_, a4_.id AS a6_ FROM org.intermine.model.bio.Chromosome AS a3_, org.intermine.model.bio.Gene AS a4_, org.intermine.model.bio.Organism AS a5_ WHERE (a4_.chromosome CONTAINS a3_ AND a4_.organism CONTAINS a5_ AND a5_.name = 'Drosophila melanogaster') ORDER BY a4_.id

precompute.query.4 = SELECT a3_.identifier AS a1_, COUNT(*) AS a2_ FROM org.intermine.model.bio.Chromosome AS a3_, org.intermine.model.bio.Gene AS a4_, org.intermine.model.bio.Organism AS a5_ WHERE (a4_.chromosome CONTAINS a3_ AND a4_.organism CONTAINS a5_ AND a5_.name = 'Drosophila melanogaster') GROUP BY a3_.identifier ORDER BY a3_.identifier

precompute.query.5 = SELECT COUNT(*) AS a1_ FROM org.intermine.model.bio.Chromosome AS a2_, org.intermine.model.bio.Gene AS a3_, org.intermine.model.bio.Organism AS a4_ WHERE (a3_.chromosome CONTAINS a2_ AND a3_.organism CONTAINS a4_ AND a4_.name = 'Drosophila melanogaster')

# Bag upload queries
precompute.query.6 = SELECT a1_.id as a3_, a2_.value as a4_ FROM org.intermine.model.bio.BioEntity AS a1_, org.intermine.model.bio.Synonym AS a2_ WHERE (a1_.synonyms CONTAINS a2_ AND a2_.isPrimary = true)

precompute.query.7 = SELECT a1_.id as a3_, a2_.value as a4_ FROM org.intermine.model.bio.BioEntity AS a1_, org.intermine.model.bio.Synonym AS a2_ WHERE (a1_.synonyms CONTAINS a2_ AND a2_.isPrimary = false)

precompute.query.8 = SELECT DISTINCT a1_.id AS a3_, a2_.value AS a4_, a5_.shortName as a6_ FROM org.intermine.model.bio.BioEntity AS a1_, org.intermine.model.bio.Synonym AS a2_, org.intermine.model.bio.Organism AS a5_ WHERE (a1_.synonyms CONTAINS a2_ AND a2_.isPrimary = true AND a1_.organism CONTAINS a5_)

precompute.query.9 = SELECT DISTINCT a1_.id AS a3_, a2_.value AS a4_, a5_.shortName as a6_ FROM org.intermine.model.bio.BioEntity AS a1_, org.intermine.model.bio.Synonym AS a2_, org.intermine.model.bio.Organism AS a5_ WHERE (a1_.synonyms CONTAINS a2_ AND a2_.isPrimary = false AND a1_.organism CONTAINS a5_)


# KEGG pathway widget query
precompute.query.10 = SELECT a1_, a2_.id as a3_ FROM org.intermine.model.bio.Gene AS a1_, org.intermine.model.bio.Pathway AS a2_ WHERE (a1_.pathways CONTAINS a2_)

# Publications widget
precompute.query.11 = SELECT DISTINCT a1_, a2_.id AS a3_ FROM org.intermine.model.bio.Publication AS a1_, org.intermine.model.bio.Gene AS a2_ WHERE (a2_.publications CONTAINS a1_)




# GO enrichment queries
precompute.query.12 = SELECT COUNT(*) AS a2_ FROM org.intermine.model.bio.Gene AS a1_

precompute.query.13 = SELECT a2_.id AS a3_ FROM org.intermine.model.bio.Gene AS a1_, org.intermine.model.bio.Organism AS a2_ WHERE (a1_.organism CONTAINS a2_)

precompute.query.14 = SELECT a2_.name AS a5_ FROM org.intermine.model.bio.Gene AS a1_, org.intermine.model.bio.GOAnnotation AS a2_, org.intermine.model.bio.Organism AS a3_, org.intermine.model.bio.GOTerm AS a4_ WHERE (a1_.goAnnotation CONTAINS a2_ AND a1_.organism CONTAINS a3_ AND a2_.property CONTAINS a4_ AND a2_.qualifier IS NULL) GROUP BY a2_.name

precompute.query.15 = SELECT a1_.id AS a5_, a3_.name AS a6_, a4_.identifier AS a7_, a4_.namespace AS a8_, a2_.name AS a9_ FROM org.intermine.model.bio.Gene AS a1_, org.intermine.model.bio.GOAnnotation AS a2_, org.intermine.model.bio.Organism AS a3_, org.intermine.model.bio.GOTerm AS a4_ WHERE (a1_.allGoAnnotation CONTAINS a2_ AND a1_.organism CONTAINS a3_ AND a2_.property CONTAINS a4_ AND a2_.qualifier IS NULL)

precompute.query.16 = SELECT a1_ FROM org.intermine.model.bio.Gene AS a1_, org.intermine.model.bio.GOAnnotation AS a2_, org.intermine.model.bio.Organism AS a3_, org.intermine.model.bio.GOTerm AS a4_ WHERE (a1_.allGoAnnotation CONTAINS a2_ AND a1_.organism CONTAINS a3_ AND a2_.property CONTAINS a4_ AND a2_.qualifier IS NULL)

precompute.query.17 = SELECT a4_.identifier AS a5_, a4_.namespace as a6_, a3_.id as a7_, a1_.id as a8_ FROM org.intermine.model.bio.Gene AS a1_, org.intermine.model.bio.GOAnnotation AS a2_, org.intermine.model.bio.Organism AS a3_, org.intermine.model.bio.GOTerm AS a4_ WHERE (a1_.allGoAnnotation CONTAINS a2_ AND a1_.organism CONTAINS a3_ AND a2_.property CONTAINS a4_ AND a2_.qualifier IS NULL)

# InterPro enrichment
precompute.query.18 = SELECT a1_, a3_.name as a6_, a4_.interproId AS a5_, a4_.name AS a7_ FROM org.intermine.model.bio.Gene AS a1_, org.intermine.model.bio.Protein AS a2_, org.intermine.model.bio.Organism AS a3_, org.intermine.model.bio.ProteinFeature AS a4_ WHERE (a1_.organism CONTAINS a3_ AND a1_.proteins CONTAINS a2_ AND a2_.proteinFeatures CONTAINS a4_ AND a4_.identifier LIKE 'IPR%')


precompute.constructquery.00 = Gene objects +Relation object Chromosome
precompute.constructquery.01 = Gene synonyms Synonym
precompute.constructquery.02 = Synonym subject Gene
precompute.constructquery.03 = BioEntity synonyms Synonym
precompute.constructquery.04 = Synonym subject BioEntity
precompute.constructquery.05 = +Relation object Gene
precompute.constructquery.06 = +Relation subject Gene
precompute.constructquery.07 = +Relation object Exon
precompute.constructquery.08 = +Relation subject Exon
precompute.constructquery.09 = +Relation object Contig
precompute.constructquery.10 = +Relation subject Contig
precompute.constructquery.11 = +Relation object Chromosome
precompute.constructquery.12 = +Relation subject Chromosome
precompute.constructquery.13 = +Relation object Transcript
precompute.constructquery.14 = +Relation subject Transcript
precompute.constructquery.15 = +Relation object BioEntity
precompute.constructquery.16 = +Relation subject BioEntity
precompute.constructquery.17 = BioEntity objects +Relation object Chromosome
precompute.constructquery.18 = BioEntity organism Organism
precompute.constructquery.19 = Gene organism Organism
precompute.constructquery.190 = Protein organism Organism
precompute.constructquery.20 = Exon organism Organism
precompute.constructquery.21 = Chromosome organism Organism
precompute.constructquery.22 = BioEntity annotations Annotation
precompute.constructquery.23 = Gene annotations Annotation

precompute.constructquery.24 = Annotation property BioProperty
precompute.constructquery.25 = BioEntity annotations Annotation property BioProperty
precompute.constructquery.26 = Gene annotations Annotation property BioProperty

precompute.constructquery.27 = Gene orthologues Orthologue orthologue Gene
precompute.constructquery.60 = Gene orthologues Orthologue orthologue Gene organism Organism

precompute.constructquery.29 = Gene goAnnotation GOAnnotation
precompute.constructquery.30 = Gene proteins Protein

precompute.constructquery.32 = Protein genes Gene

precompute.constructquery.52 = Protein genes Gene orthologues Orthologue orthologue Gene

precompute.constructquery.60 = Gene proteins Protein annotations GOAnnotation
precompute.constructquery.70 = Gene overlappingFeatures IntergenicRegion
precompute.constructquery.71 = IntergenicRegion overlappingFeatures Gene

precompute.constructquery.72 = Gene orthologues Orthologue orthologue Gene proteins Protein
precompute.constructquery.74 = Protein genes Gene orthologues Orthologue orthologue Gene proteins Protein


precompute.constructquery.77 = Gene orthologues Orthologue orthologue Gene proteins Protein proteinInteractions ProteinInteraction interactingProteins Protein

# added bby kmr:
#  precompute.constructquery.78 = +BioEntity evidence +Evidence


test.query.01 = SELECT DISTINCT a1_ FROM \
                org.intermine.model.bio.Contig AS a1_ WHERE (a1_.identifier = '4_3772') 
test.query.02 = SELECT DISTINCT a1_.end AS a2_, a1_, a1_.start AS a3_ \
                FROM org.intermine.model.bio.Location AS a1_ WHERE \
                (a1_.start = 1129 AND a1_.end = 3746) 
test.query.03 = SELECT DISTINCT a1_.end AS a2_, a1_, a1_.start AS a3_ \
                FROM org.intermine.model.bio.Location AS a1_ WHERE (a1_.start = 3746) 

test.query.04 = SELECT DISTINCT a1_.start AS a2_, a1_.end AS a3_, a1_.strand AS a4_, a6_ \
                FROM org.intermine.model.bio.Location AS a1_, \
                org.intermine.model.bio.Chromosome AS a5_, \
                org.intermine.model.bio.BioEntity AS a6_ WHERE (a1_.object CONTAINS \
                a5_ AND a1_.subject CONTAINS a6_ and a5_.identifier = '1')

test.query.05 = SELECT DISTINCT a1_.start AS a2_, a1_.end AS a3_, a1_.strand AS a4_, a6_ \
                FROM org.intermine.model.bio.Location AS a1_, \
                org.intermine.model.bio.Chromosome AS a5_, \
                org.intermine.model.bio.BioEntity AS a6_ WHERE (a1_.object CONTAINS \
                a5_ AND a1_.subject CONTAINS a6_ and a5_.identifier = '4')

test.query.06 = SELECT DISTINCT a1_.start AS a2_, a1_.end AS a3_, a1_.strand AS a4_, a6_ \
                FROM org.intermine.model.bio.Location AS a1_, \
                org.intermine.model.bio.Chromosome AS a5_, \
                org.intermine.model.bio.Gene AS a6_ WHERE (a1_.object CONTAINS \
                a5_ AND a1_.subject CONTAINS a6_)

test.query.07 = SELECT DISTINCT a3_.id AS a4_ FROM org.intermine.model.bio.Location AS \
                a1_, org.intermine.model.bio.Chromosome AS a2_, \
                org.intermine.model.bio.Gene AS a3_ WHERE (a1_.end >= 1 AND \
                a1_.start <= 500 AND a1_.object CONTAINS a2_ AND \
                a1_.subject CONTAINS a3_)

test.query.08 = SELECT DISTINCT a1_.id AS a2_ FROM org.intermine.model.bio.BioEntity \
                AS a1_ WHERE (a1_.id IN (SELECT DISTINCT a3_.id AS a4_ FROM \
                org.intermine.model.bio.Location AS a1_, \
                org.intermine.model.bio.Chromosome AS a2_, \
                org.intermine.model.bio.BioEntity AS a3_ WHERE (a1_.start >= 1100000 \
                AND a1_.end <= 1140000 AND a1_.object CONTAINS a2_ \
                AND a1_.subject CONTAINS a3_)) AND a1_.id IN (SELECT DISTINCT a3_.id AS \
                a4_ FROM org.intermine.model.bio.Location AS a1_, \
                org.intermine.model.bio.Chromosome AS a2_, \
                org.intermine.model.bio.Gene AS a3_ WHERE (a1_.object \
                CONTAINS a2_ AND a1_.subject CONTAINS a3_)))

test.query.09 = SELECT DISTINCT a1_, a2_, a3_ FROM \
                org.intermine.model.bio.Gene AS a1_, \
                org.intermine.model.bio.Relation AS a2_, \
                org.intermine.model.bio.Chromosome AS a3_ WHERE (a1_.objects \
                CONTAINS a2_ AND a2_.object CONTAINS a3_) 

test.query.10 = SELECT DISTINCT a1_, a2_, a3_, a1_.identifier as a4_ FROM \
                org.intermine.model.bio.Gene AS a1_, \
                org.intermine.model.bio.Relation AS a2_, \
                org.intermine.model.bio.Chromosome AS a3_ WHERE (a1_.objects \
                CONTAINS a2_ AND a2_.object CONTAINS a3_) 

test.query.11 = SELECT DISTINCT a1_, a2_, a3_, a1_.identifier as a4_, a3_.identifier as a5_ FROM \
                org.intermine.model.bio.Gene AS a1_, \
                org.intermine.model.bio.Relation AS a2_, \
                org.intermine.model.bio.Chromosome AS a3_ WHERE (a1_.objects \
                CONTAINS a2_ AND a2_.object CONTAINS a3_) order by a3_.identifier


#!/usr/bin/python

import os, urllib, tempfile, sys, datetime

def output(log, message):
    print message + "\n"
    log.write(message + "\n")

if len(sys.argv) != 3:
    print "Usage:"
    print "    get_redfly destination_dir log_file"
    print "For example:"
    print "    get_redfly /DATA/redfly download.log"
    exit(1)

download_dir = sys.argv[1]
logname = sys.argv[2]

if not download_dir.endswith("/"):
    download_dir += "/"

try:
    log = open(logname, 'a')
except IOError:
    print "Error: Can't write to log file: " + logname
    sys.exit(1)

log.write("get_redfly  " + str(datetime.datetime.now()) + "\n")

if not os.path.exists(download_dir):
    output(log, "Error: Can't find destination directory: " + download_dir)
    sys.exit(1)


# fetch one of the files and parse out the date
tmp_dir = tempfile.mkdtemp()
tmp_file_path = tmp_dir + "tfbs_dump.gff"
urllib.urlretrieve("http://redfly.ccr.buffalo.edu/datadumps/tfbs_dump.gff", tmp_file_path)

tmp_file = open(tmp_file_path)
date = ""
for line in tmp_file:
    if '##date' in line:
        date = line.rstrip().split(' ')[1]
        break

if not date:
    output(log, "Failed to read '##date' from " + gff_file.name)
    sys.exit(1)

formatted_date = date[0:4] + "-" + date[4:6] + "-" + date[6:]
version_dir = download_dir + formatted_date + "/"

# create directory and download files, or stop if version already exists
if not os.path.exists(version_dir):
    os.mkdir(version_dir)

    os.mkdir(version_dir + "tfbs/")
    os.mkdir(version_dir + "crm/")

    tfbs_file = version_dir + "tfbs/tfbs_dump.gff"
    crm_file = version_dir + "crm/crm_dump.gff"

    urllib.urlretrieve("http://redfly.ccr.buffalo.edu/datadumps/tfbs_dump.gff", tfbs_file)
    output(log, "Downloaded new file: " + tfbs_file)

    urllib.urlretrieve("http://redfly.ccr.buffalo.edu/datadumps/crm_dump.gff", crm_file)
    output(log, "Downloaded new file: " + crm_file)

    link = download_dir + "current"
    if os.path.exists(link):
        os.remove(link)
    os.symlink(version_dir, link)
    output(log, "created link: " + link + " -> " + version_dir)
else:
    output(log, "Current version is up to date, directory exists for: " + version_dir)





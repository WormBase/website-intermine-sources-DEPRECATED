#!/usr/bin/python

import sys

# Needed for InParanoid orthologues.
# Use BioMart gene/peptide mappings and VectorBase old ensembl id to new AGAP id file
# to create a mapping from old ensembl peptide id to new AGAP gene id.  
#
# read files that are:
#   AGAP_peptide_id     ENS_peptide_id ENS_peptide_id
#
# and (AGAP_gene_id can appear on multiple lines):  
#   AGAP_gene_id        APAP_peptide_id
#
# and create a file that is (AGAP_gene_id can appear on multiple lines):
#   AGAP_gene_id    ENS_peptide_id


if len(sys.argv) != 4:
   print "You need to provide files for:"
   print "    1) new to old VectorBase peptide ids"
   print "    2) new gene id to new peptide"
   print "    3) an output filename"
   print "\nexample usage:  > anopheles_id_mapping New_IDs-to_Old_IDs-Translations.tsv 7165_mart_export.txt 7165_gene_peptide.txt\n"
   sys.exit(2)

new_to_old_file = sys.argv[1]
gene_to_peptide_file = sys.argv[2]
output_file = sys.argv[3]

agap_to_ens_peptide = {}
agap_peptide_to_agap_gene = {}

# create map from new to old peptide ids
agap_to_ens_file = open(new_to_old_file)

for line in agap_to_ens_file:
    ids = line.rstrip().split('\t')
    if len(ids) == 2:
        agap_to_ens_peptide[ids[0]] = ids[1].split(' ')

agap_to_ens_file.close()

if not agap_to_ens_peptide:
   print "failed to read old to new peptide ids."
   sys.exit(1)


# create map from new peptide ids to new gene ids
gene_peptide_file = open(gene_to_peptide_file)

for line in gene_peptide_file:
    ids = line.rstrip().split('\t')
    if len(ids) == 2:
       agap_peptide_to_agap_gene[ids[1]] = ids[0]

gene_peptide_file.close()

if not agap_peptide_to_agap_gene:
   print "failed to read new gene to peptide ids."
   sys.exit(1)



output = open(output_file, 'w')

# use previously created maps to write out new gene id to old peptide id
for (agap_peptide_id, agap_gene_id) in agap_peptide_to_agap_gene.items():
    if agap_peptide_id in agap_to_ens_peptide:
       for ens_peptide_id in agap_to_ens_peptide[agap_peptide_id]:
           output.write(agap_gene_id + '\t' + ens_peptide_id + '\n')

output.close()

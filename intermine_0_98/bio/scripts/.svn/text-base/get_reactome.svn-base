#!/usr/bin/perl

# this file downloads a single file to the specified download directory.
# then the file is compared to the current version (if any).
# if the file is the same as the current file, it's deleted.  if the file
# is newer, a directory is created, the current link is updated.

use strict;
use warnings;

BEGIN {
  # find the lib directory by looking at the path to this script
  push (@INC, ($0 =~ m:(.*)/.*:)[0] . '/../../intermine/perl/lib/');
}
use InterMine::DataDownloader;
use File::Copy;

my $shared_data = "/shared/data";

my $file = "biopax.zip";
my $server = "http://reactome.org/download/current";
my $main_dir = "$shared_data/biopax/reactome";
my $config_file="./resources/get_scripts.config";

#data source
my $file_to_get = "$server/$file";

#data destination
my $download_dir = "$main_dir/temp";
my $temp_file = "$download_dir/temp.txt";

&checkdir_exists($main_dir);
&checkdir_exists($download_dir);
&http_download($file_to_get,$temp_file);

my $current_link = "$main_dir/current";
my $old_file = "$current_link/$file";

#compare the files, create version directory if it is a new version or
#the current data link is missing
if(&compare_files($old_file,$temp_file)==1){
    print "Keeping downloaded files.\n";
    &update_files($main_dir,$file,$temp_file,$current_link);
} else {
    print "Downloaded files deleted.\n";
    unlink $temp_file;	
}

#create data directory, move files, make link	
sub update_files(){
    my ($dir,$new_name,$oldfile,$link) = @_;
    my $date = &convert_date();
    my $new_dir = "$dir/$date";
    my $newfile = "$new_dir/$new_name";
    &checkdir_exists($new_dir);
    rename($oldfile, $newfile) or die "Cannot rename $oldfile: $!";

    # update current link
    &make_link($date,$link);

    # add link to curated directory
    my $not_curated_dir = "$new_dir/not-curated";   
    my $curated_dir_current = "$new_dir/curated";
    my $curated_dir = "$main_dir/curated";

    # link to ../curated 
    &make_link($curated_dir, $curated_dir_current);

    # unzip files
    system "chmod -R a+r,g+w $new_dir";	
    if ($newfile =~ m/zip/) {

	# make not-curated directory
	&checkdir_exists($not_curated_dir);

	system "unzip $newfile -d $new_dir";

	# move good ones to the /not-curated directory
	my %taxons = &config_species($config_file,"reactome");

	#open each uniprot file
	foreach my $key (sort keys %taxons) {
	    my $owl_file = "$current_link/$taxons{$key}.owl";
	    move("$owl_file", "$not_curated_dir/$taxons{$key}.owl")
		or print "file not found: $owl_file\n";
	    print "copying $taxons{$key}.owl\n";
    	}

	# delete files that aren't in config file
	unlink(<$current_link/*.owl>);
    }
}	

#!/usr/bin/perl

#downloads all.txt from http://130.209.132.177/atlas and compares it to the version pointed
#to by the current link in /shared/data/flyatlas as a current version id for
#genes2molecular_names.txt is not available prior to download.

use strict;
use warnings;

BEGIN {
  # find the lib directory by looking at the path to this script
  push (@INC, ($0 =~ m:(.*)/.*:)[0] . '/../../intermine/perl/lib/');
}
use InterMine::DataDownloader;

#Define ARGVs
my ($logdir,$logname,$home,$tempname);
if(@ARGV!=3){
    die "Wrong number of ARGVs!\nget_all.sh should supply the log directory, temporary log name, and /shared/data/.\n";	
} else {
    $logdir = $ARGV[0];
    $logname = $ARGV[1];    
    $home = $ARGV[2];
}

#data source
my $flyatlas_server = "http://130.209.54.32/atlas";
my $flyatlas_data_file = "20090519all.txt";
my $file_to_get = "$flyatlas_server/$flyatlas_data_file";

#data destination
my $flyatlas_main_dir = "$home/flyatlas";
my $download_dir = "$flyatlas_main_dir/temp";
my $temp_file = "$download_dir/temp.txt";

#create directories and download the file
&checkdir_exists($flyatlas_main_dir);
&checkdir_exists($download_dir);
&http_download($file_to_get,$temp_file);

my $current_link = "$home/flyatlas/current";
my $old_file = "$current_link/../orig/20090519all.txt";
my ($version_buffer,$log_buffer);

#compare the files, create version directory if it is a new version or
#the current data link is missing
if(&compare_files($old_file,$temp_file)==1){
	print "Keeping downloaded files.\n";
	&update_files($flyatlas_main_dir,$flyatlas_data_file,$temp_file,$current_link);
}else{
	print "Downloaded files deleted.\n";
	unlink $temp_file;
	$log_buffer = "FlyAtlas\nCurrent data ok\n\n";
}
&write_log($log_buffer,$logdir,$logname);

#create data directory, move files, make link	
sub update_files(){
    my ($dir,$new_name,$oldfile,$link) = @_;
    my $date = &convert_date();
    my $new_dir = "$dir/$date";
    my $orig_file = "$new_dir/orig/$new_name";
    my $fixed_file = "$new_dir/fixed/$new_name";
    &checkdir_exists($new_dir);
    &checkdir_exists("$new_dir/orig/");
    &checkdir_exists("$new_dir/fixed/");
    rename($oldfile, $orig_file) or die "Cannot rename $oldfile: $!";
    &fix_file($orig_file,$fixed_file);
    &make_link("$date/fixed",$link);
	
    $log_buffer = "FlyAtlas\nNew data available in $new_dir/fixed/ containing file $new_name\n\n"; 
    $version_buffer = "FlyAtlas gene expression data\n$date\nMicroarray-based gene expression data for adult D. melanogaster tissues from FlyAtlas\nhttp://www.flyatlas.org\n";
    &write_version($dir,$version_buffer);
    system "chmod -R a+r,g+w $new_dir";
}
#correct the column names
sub fix_file(){
    my ($old_file,$fixed_file) = @_;
    
    open(F,"<$old_file") or die "Cannot open $old_file: $!";
    open(FH,">$fixed_file") or die "Cannot open $fixed_file: $!";
    while(<F>){	
        s/FakeCall/tubule vs whole fly - T-Test_Change Direction/g;
        s/Grandmean/TubuleMean/g;
        s/GrandSEM/TubuleSEM/g;
        s/fakepresent/TubuleCall/g;
        print FH;
    }
    close(F) or die "$!";
    close(FH) or die "$!";
}

1;

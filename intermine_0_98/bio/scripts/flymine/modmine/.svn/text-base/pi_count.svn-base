#!/usr/bin/env python


# find files names *.chadoxml in the current directory, extract experiment_props
# and count submissions per PI name

import os


# build a dictionary of experiment_prop names and values
def search_lines(input, projects):
    in_prop = False
    name = ""
    value = ""
    props = {}
    found_exp_start = False   # have we read the <experiment> tag
    found_exp_end = False  # have we read the </experiment> tag

    for line in input:
        if '</experiment_prop' in line:
            if value != "":
                props[name] = value
            in_prop = False
            value = ""
            name = ""
                
        if in_prop:
            if '<name>' in line:
                start = line.index('>') + 1
                end = line.index('<', start)
                name = line[start:end]
                        
            if '<value>' in line:
                start = line.index('>') 
                if line.find('<', start) >= 0:
                    end = line.index('<', start)
                else:
                    end = len(line)
                        
                value = line[start + 1:end]
                                
        if '<experiment_prop' in line:
            in_prop = True

        if '<experiment' in line:
            found_exp_start = True

        if '</experiment' in line:
            found_exp_end = True
            


    if 'Project' in props:
        count = 0
        proj = props['Project']
        if proj in projects:
            count = projects[proj]
        projects[proj] = count + 1

    return 'Project' in props


# find last num lines of file fast by reading chars near end of file and then
# restricting to last num lines 
def last_lines(file, num):
     file.seek (0, 2)           # Seek @ EOF
     fsize = file.tell()        # Get Size
     # generous guess that each row is 512 chars
     file.seek (max (fsize-(512*num), 0), 0)   # Set pos @ last n chars
     lines = file.readlines()       # Read to end

     if len(lines) > num:
         lines = lines[-num:]    # Get last num lines
     return lines


# print a dictionary sorted by keys
def print_sorted_dict(dict):
    keys = dict.keys()
    keys.sort()
    for key in keys:
        print key, "=", dict[key]

projects = {}
for file in os.listdir("."):
    if file.endswith(".chadoxml"):
        sub = open(file)
        last = last_lines(sub, 1000)
        if not search_lines(last, projects):
            sub.seek(0,0)
            print "searching whole file: ", sub.name
            if not search_lines(sub, projects):
                print file + " - no <experiment_prop><name> found!"
        sub.close()

print
print_sorted_dict(projects)
print
print "total: ", sum(projects.values())
print


<query-list>
  <query name="companyName" model="testmodel" view="Company.name"></query>
  <query name="employeeName" model="testmodel" view="Employee.name"></query>
  <query name="employeeDepartmentName" model="testmodel" view="Employee.name Employee.department.name"></query>
  <query name="employeeDepartmentCompany" model="testmodel" view="Employee.name Employee.department.name Employee.department.company.name">
    <node path="Employee" type="Employee"></node>
    <node path="Employee.department" type="Department"></node>
    <node path="Employee.department.name" type="String">
      <constraint op="=" value="DepartmentA1" code="A"></constraint>
    </node>
  </query>
    <query name="employeeDepartmentCompanyWildcard" model="testmodel" view="Employee.name Employee.department.name Employee.department.company.name">
    <node path="Employee" type="Employee"></node>
    <node path="Employee.department" type="Department"></node>
    <node path="Employee.department.name" type="String">
      <constraint op="=" value="DepartmentA%" description="" identifier="" code="A"></constraint>
    </node>
  </query>
  <query name="employeeCompany" model="testmodel" view="Employee.name Employee.department.company.name">
    <node path="Employee" type="Employee"></node>
    <node path="Employee.department" type="Department"></node>
    <node path="Employee.department.name" type="String">
      <constraint op="=" value="DepartmentA1" description="" identifier="" code="A"></constraint>
    </node>
  </query>
 <query name="departmentBagConstraint" model="testmodel" view="Department.name" sortOrder="Department.name asc" constraintLogic="A and B">
  <node path="Department" type="Department">
    <constraint op="IN" value="departmentBag" code="A"></constraint>
  </node>
  <node path="Department.manager" type="Manager"></node>
  <node path="Department.company" type="Company">
    <constraint op="LOOKUP" value="*ABC*" code="B"></constraint>
  </node>
 </query>
 <query name="noOrderBy" model="testmodel" view="Employee.name Employee.department.name"></query>
 <query name="orderByAsc" model="testmodel" view="Employee.name Employee.department.name" sortOrder="Employee.name asc"></query>
 <query name="orderByDesc" model="testmodel" view="Employee.name Employee.department.name" sortOrder="Employee.name desc"></query>
 <query name="longPath" model="testmodel" view="Employee.name Employee.department.name" sortOrder="Employee.department.name asc"></query>
 <query name="orderByCompany" model="testmodel" view="Company.name Company.vatNumber Company.address.address" sortOrder="Company.vatNumber desc Company.name asc"></query>
 <query name="orderByVat" model="testmodel" view="Company.name Company.vatNumber Company.address.address" sortOrder="Company.vatNumber asc Company.name asc"></query>
 <query name="departmentManagers" model="testmodel" view="Department.name Department.employees.name">
  <node path="Department.employees" type="Manager">
   <constraint op="=" value="DepartmentA1"/>
  </node>
 </query>
 <query name="groupedConstraints" model="testmodel" view="Department.name Department:employees.name" sortOrder="Department.name asc" constraintLogic="A and B">
  <node path="Department" type="Department">
  </node>
  <node path="Department.name" type="String">
   <constraint op="=" value="DepartmentA1" description="" identifier="" code="A">
   </constraint>
  </node>
  <node path="Department:employees" type="Employee">
  </node>
  <node path="Department:employees.name" type="String">
   <constraint op="=" value="EmployeeA1" description="" identifier="" code="B">
   </constraint>
  </node>
 </query>
</query-list>

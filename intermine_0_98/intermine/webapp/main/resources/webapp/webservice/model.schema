{
  "description": "A representation of the data model in an InterMine data-warehouse",
  "type": "object",
  "properties": {
    "model": {
      "description": "The data model representation",
      "type": "object",
      "required": true,
      "properties": {
        "name": {
          "description": "The name of the model",
          "type": "string"
        },
        "classes": {
          "description": "The classes in the model - each class represents a table of data",
          "type": "object",
          "required": true,
          "patternProperties": {
            "^[A-Za-z0-9]+$": {
              "description": "A class in the model",
              "type": "object",
              "properties": {
                "name": {
                  "description": "The name of this class",
                  "type": "string",
                  "required": true
                },
                "extends": {
                  "description": "A list of other classes this one extends",
                  "type": "array",
                  "required": true,
                  "items": {
                    "description": "A parent class name",
                    "type": "string"
                  }
                },
                "isInterface": {
                  "description": "Whether or not this class is an interface",
                  "type": "boolean",
                  "required": true
                },
                "attributes": {
                  "description": "The items of data every object in this class can have",
                  "type": "object",
                  "patternProperties": {
                    "^[A-Za-z0-9]+$": {
                      "description": "A field of an object, aka. a column on a table",
                      "type": "object",
                      "properties": {
                        "name": {
                          "description": "The name of this field, aka. the name of the column",
                          "type": "string",
                          "required": true
                        },
                        "type": {
                          "description": "The type of the data held in this field",
                          "type": "string",
                          "required": true,
                          "enum": [
                            "java.lang.String",
                            "java.lang.Integer",
                            "java.lang.Double",
                            "java.lang.Short",
                            "java.lang.Float",
                            "java.lang.Long",
                            "java.lang.Boolean",
                            "java.math.BigDecimal",
                            "java.util.Date",
                            "org.intermine.objectstore.query.ClobAccess",
                            "boolean",
                            "float",
                            "double",
                            "short",
                            "long",
                            "int"
                          ]
                        }
                      }
                    }
                  }
                },
                "references": {
                  "description": "The fields in an object of this class that do not themselves contain data, but instead contain other objects, aka. Foreign keys",
                  "type": "object",
                  "required": true,
                  "patternProperties": {
                    "^[A-Za-z0-9]+$": {
                      "description": "A field of an object that contains another object, aka. a foreign key",
                      "type": "object",
                      "properties": {
                        "name": {
                          "description": "The name of this field/foreign key",
                          "type": "string",
                          "required": true
                        },
                        "referencedType": {
                          "description": "The class of the object that this field contains, aka, the foreign key's table",
                          "type": "string",
                          "required": true
                        },
                        "reverseReference": {
                          "description": "The name of the field on the object contained in this field that contains a reference back to this object",
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "collections": {
                  "description": "The fields in an object of this class that do not themselves contain data, but instead contain a collection of other objects. In a traditional database schema this would be a ?-to-many relationship",
                  "type": "object",
                  "required": true,
                  "patternProperties": {
                    "^[A-Za-z0-9]+$": {
                      "description": "A field of an object that contains a collection of other objects",
                      "type": "object",
                      "properties": {
                        "name": {
                          "description": "The name of this field/foreign key",
                          "type": "string",
                          "required": true
                        },
                        "referencedType": {
                          "description": "The class of the object that this field contains, aka, the foreign key's table",
                          "type": "string",
                          "required": true
                        },
                        "reverseReference": {
                          "description": "The name of the field on the object contained in this field that contains a reference back to this object",
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "wasSuccessful": {
      "description": "Whether or not this request to the webservice was successful",
      "type": "boolean",
      "required": true
    },
    "error": {
      "description": "The error generated by running this query",
      "type": ["string", "null"],
      "required": true
    },
    "statusCode": {
      "description": "The HTTP status code generated by this request",
      "type": "integer",
      "format": "httpstatuscode",
      "required": true
    }
  }
}
    


<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!--NewPage-->
<HTML>
<HEAD>
<!-- Generated by javadoc (build 1.6.0_26) on Sat Jul 30 01:40:16 BST 2011 -->
<TITLE>
TemplateQuery
</TITLE>

<META NAME="date" CONTENT="2011-07-30">

<LINK REL ="stylesheet" TYPE="text/css" HREF="../../../../stylesheet.css" TITLE="Style">

<SCRIPT type="text/javascript">
function windowTitle()
{
    if (location.href.indexOf('is-external=true') == -1) {
        parent.document.title="TemplateQuery";
    }
}
</SCRIPT>
<NOSCRIPT>
</NOSCRIPT>

</HEAD>

<BODY BGCOLOR="white" onload="windowTitle();">
<HR>


<!-- ========= START OF TOP NAVBAR ======= -->
<A NAME="navbar_top"><!-- --></A>
<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_top_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
</EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="../../../../org/intermine/api/template/TemplatePrecomputeHelper.html" title="class in org.intermine.api.template"><B>PREV CLASS</B></A>&nbsp;
&nbsp;<A HREF="../../../../org/intermine/api/template/TemplateSummariser.html" title="class in org.intermine.api.template"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../../../index.html?org/intermine/api/template/TemplateQuery.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="TemplateQuery.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>


</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;<A HREF="#field_summary">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;<A HREF="#field_detail">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_top"></A>
<!-- ========= END OF TOP NAVBAR ========= -->

<HR>
<!-- ======== START OF CLASS DATA ======== -->
<H2>
<FONT SIZE="-1">
org.intermine.api.template</FONT>
<BR>
Class TemplateQuery</H2>
<PRE>
java.lang.Object
  <IMG SRC="../../../../resources/inherit.gif" ALT="extended by "><A HREF="../../../../org/intermine/pathquery/PathQuery.html" title="class in org.intermine.pathquery">org.intermine.pathquery.PathQuery</A>
      <IMG SRC="../../../../resources/inherit.gif" ALT="extended by "><B>org.intermine.api.template.TemplateQuery</B>
</PRE>
<DL>
<DT><B>All Implemented Interfaces:</B> <DD>java.lang.Cloneable, org.intermine.api.search.WebSearchable</DD>
</DL>
<HR>
<DL>
<DT><PRE>public class <B>TemplateQuery</B><DT>extends <A HREF="../../../../org/intermine/pathquery/PathQuery.html" title="class in org.intermine.pathquery">PathQuery</A><DT>implements org.intermine.api.search.WebSearchable</DL>
</PRE>

<P>
A template query, which consists of a PathQuery, description, category,
 short name.
<P>

<P>
<HR>

<P>
<!-- =========== FIELD SUMMARY =========== -->

<A NAME="field_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Field Summary</B></FONT></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/intermine/api/template/TemplateQuery.html#comment">comment</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;The private comment for this query.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/intermine/api/template/TemplateQuery.html#edited">edited</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Whether this is an edited version of another template.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/intermine/api/template/TemplateQuery.html#name">name</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Template query name.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;<A HREF="../../../../org/intermine/pathquery/PathQuery.html" title="class in org.intermine.pathquery">PathQuery</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/intermine/api/template/TemplateQuery.html#query">query</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;The path query itself.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;SavedTemplateQuery</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/intermine/api/template/TemplateQuery.html#savedTemplateQuery">savedTemplateQuery</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SavedTemplateQuery object in the UserProfile database, so we can update summaries.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/intermine/api/template/TemplateQuery.html#title">title</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Template query title.</TD>
</TR>
</TABLE>
&nbsp;<A NAME="fields_inherited_from_class_org.intermine.pathquery.PathQuery"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TH ALIGN="left"><B>Fields inherited from class org.intermine.pathquery.<A HREF="../../../../org/intermine/pathquery/PathQuery.html" title="class in org.intermine.pathquery">PathQuery</A></B></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><A HREF="../../../../org/intermine/pathquery/PathQuery.html#SPACE_SPLITTER">SPACE_SPLITTER</A>, <A HREF="../../../../org/intermine/pathquery/PathQuery.html#USERPROFILE_VERSION">USERPROFILE_VERSION</A></CODE></TD>
</TR>
</TABLE>
&nbsp;
<!-- ======== CONSTRUCTOR SUMMARY ======== -->

<A NAME="constructor_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Constructor Summary</B></FONT></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><B><A HREF="../../../../org/intermine/api/template/TemplateQuery.html#TemplateQuery(java.lang.String, java.lang.String, java.lang.String, org.intermine.pathquery.PathQuery)">TemplateQuery</A></B>(java.lang.String&nbsp;name,
              java.lang.String&nbsp;title,
              java.lang.String&nbsp;comment,
              <A HREF="../../../../org/intermine/pathquery/PathQuery.html" title="class in org.intermine.pathquery">PathQuery</A>&nbsp;query)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Construct a new instance of TemplateQuery.</TD>
</TR>
</TABLE>
&nbsp;
<!-- ========== METHOD SUMMARY =========== -->

<A NAME="method_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Method Summary</B></FONT></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/intermine/api/template/TemplateQuery.html#clearConstraints()">clearConstraints</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Clears the entire set of constraints from this query, and resets the constraint logic.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../org/intermine/api/template/TemplateQuery.html" title="class in org.intermine.api.template">TemplateQuery</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/intermine/api/template/TemplateQuery.html#clone()">clone</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Clone this TemplateQuery.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../org/intermine/api/template/TemplateQuery.html" title="class in org.intermine.api.template">TemplateQuery</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/intermine/api/template/TemplateQuery.html#cloneWithoutEditableConstraints()">cloneWithoutEditableConstraints</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Return a clone of this template query with all editable constraints
 removed - i.e.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/intermine/api/template/TemplateQuery.html#getComment()">getComment</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Get the private comment for this template.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/intermine/api/template/TemplateQuery.html#getConstraintDescription(org.intermine.pathquery.PathConstraint)">getConstraintDescription</A></B>(<A HREF="../../../../org/intermine/pathquery/PathConstraint.html" title="class in org.intermine.pathquery">PathConstraint</A>&nbsp;constraint)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the description attached to the given constraint.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.util.Map&lt;<A HREF="../../../../org/intermine/pathquery/PathConstraint.html" title="class in org.intermine.pathquery">PathConstraint</A>,java.lang.String&gt;</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/intermine/api/template/TemplateQuery.html#getConstraintDescriptions()">getConstraintDescriptions</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the constraint descriptions for this query.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.util.Map&lt;<A HREF="../../../../org/intermine/pathquery/PathConstraint.html" title="class in org.intermine.pathquery">PathConstraint</A>,<A HREF="../../../../org/intermine/api/template/SwitchOffAbility.html" title="enum in org.intermine.api.template">SwitchOffAbility</A>&gt;</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/intermine/api/template/TemplateQuery.html#getConstraintSwitchOffAbility()">getConstraintSwitchOffAbility</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the constraint SwitchOffAbility for this query.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.util.List&lt;<A HREF="../../../../org/intermine/pathquery/PathConstraint.html" title="class in org.intermine.pathquery">PathConstraint</A>&gt;</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/intermine/api/template/TemplateQuery.html#getEditableConstraints()">getEditableConstraints</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the list of all editable constraints.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.util.List&lt;<A HREF="../../../../org/intermine/pathquery/PathConstraint.html" title="class in org.intermine.pathquery">PathConstraint</A>&gt;</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/intermine/api/template/TemplateQuery.html#getEditableConstraints(java.lang.String)">getEditableConstraints</A></B>(java.lang.String&nbsp;path)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;For a path with editable constraints, get all the editable constraints as a List, or the
 empty list if there are no editable constraints on that path.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.util.List&lt;java.lang.String&gt;</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/intermine/api/template/TemplateQuery.html#getEditablePaths()">getEditablePaths</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Get the paths of all editable constraints in this template.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.util.List&lt;<A HREF="../../../../org/intermine/pathquery/PathConstraint.html" title="class in org.intermine.pathquery">PathConstraint</A>&gt;</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/intermine/api/template/TemplateQuery.html#getModifiableEditableConstraints()">getModifiableEditableConstraints</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the list of all editable constraints.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/intermine/api/template/TemplateQuery.html#getName()">getName</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Get the query short name.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../org/intermine/pathquery/PathQuery.html" title="class in org.intermine.pathquery">PathQuery</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/intermine/api/template/TemplateQuery.html#getPathQuery()">getPathQuery</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../org/intermine/pathquery/PathQuery.html" title="class in org.intermine.pathquery">PathQuery</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/intermine/api/template/TemplateQuery.html#getQueryToExecute()">getQueryToExecute</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Fetch the PathQuery to execute for this template.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;SavedTemplateQuery</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/intermine/api/template/TemplateQuery.html#getSavedTemplateQuery()">getSavedTemplateQuery</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gets the saved template query object.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../org/intermine/api/template/SwitchOffAbility.html" title="enum in org.intermine.api.template">SwitchOffAbility</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/intermine/api/template/TemplateQuery.html#getSwitchOffAbility(org.intermine.pathquery.PathConstraint)">getSwitchOffAbility</A></B>(<A HREF="../../../../org/intermine/pathquery/PathConstraint.html" title="class in org.intermine.pathquery">PathConstraint</A>&nbsp;constraint)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gets the sbitch-off-ability of a constraint.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/intermine/api/template/TemplateQuery.html#getTitle()">getTitle</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Get the template title.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/intermine/api/template/TemplateQuery.html#isEditable(org.intermine.pathquery.PathConstraint)">isEditable</A></B>(<A HREF="../../../../org/intermine/pathquery/PathConstraint.html" title="class in org.intermine.pathquery">PathConstraint</A>&nbsp;constraint)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns whether a constraint is editable.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/intermine/api/template/TemplateQuery.html#isEdited()">isEdited</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns true if the TemplateQuery has been edited by the user and is therefore saved only in
 the query history.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/intermine/api/template/TemplateQuery.html#isOptional(org.intermine.pathquery.PathConstraint)">isOptional</A></B>(<A HREF="../../../../org/intermine/pathquery/PathConstraint.html" title="class in org.intermine.pathquery">PathConstraint</A>&nbsp;constraint)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns whether a constraint is optional.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/intermine/api/template/TemplateQuery.html#isRequired(org.intermine.pathquery.PathConstraint)">isRequired</A></B>(<A HREF="../../../../org/intermine/pathquery/PathConstraint.html" title="class in org.intermine.pathquery">PathConstraint</A>&nbsp;constraint)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns whether a constraint is required.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/intermine/api/template/TemplateQuery.html#removeConstraint(org.intermine.pathquery.PathConstraint)">removeConstraint</A></B>(<A HREF="../../../../org/intermine/pathquery/PathConstraint.html" title="class in org.intermine.pathquery">PathConstraint</A>&nbsp;constraint)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Removes a constraint from this query.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../org/intermine/api/template/TemplateQuery.html" title="class in org.intermine.api.template">TemplateQuery</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/intermine/api/template/TemplateQuery.html#removeDirectAttributesFromView()">removeDirectAttributesFromView</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Removed from the view all the direct attributes that aren't editable constraints</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/intermine/api/template/TemplateQuery.html#replaceConstraint(org.intermine.pathquery.PathConstraint, org.intermine.pathquery.PathConstraint)">replaceConstraint</A></B>(<A HREF="../../../../org/intermine/pathquery/PathConstraint.html" title="class in org.intermine.pathquery">PathConstraint</A>&nbsp;old,
                  <A HREF="../../../../org/intermine/pathquery/PathConstraint.html" title="class in org.intermine.pathquery">PathConstraint</A>&nbsp;replacement)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Replaces a constraint in the query with a different, carrying over the constraint code, and
 preserving the constraint logic.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/intermine/api/template/TemplateQuery.html#setComment(java.lang.String)">setComment</A></B>(java.lang.String&nbsp;comment)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Set the private comment for this template.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/intermine/api/template/TemplateQuery.html#setConstraintDescription(org.intermine.pathquery.PathConstraint, java.lang.String)">setConstraintDescription</A></B>(<A HREF="../../../../org/intermine/pathquery/PathConstraint.html" title="class in org.intermine.pathquery">PathConstraint</A>&nbsp;constraint,
                         java.lang.String&nbsp;description)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the description for a constraint.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/intermine/api/template/TemplateQuery.html#setEditable(org.intermine.pathquery.PathConstraint, boolean)">setEditable</A></B>(<A HREF="../../../../org/intermine/pathquery/PathConstraint.html" title="class in org.intermine.pathquery">PathConstraint</A>&nbsp;constraint,
            boolean&nbsp;editable)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets a constraint to be editable or not.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/intermine/api/template/TemplateQuery.html#setEditableConstraints(java.util.List)">setEditableConstraints</A></B>(java.util.List&lt;<A HREF="../../../../org/intermine/pathquery/PathConstraint.html" title="class in org.intermine.pathquery">PathConstraint</A>&gt;&nbsp;editable)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the list of editable constraints to exactly that provided, in the given order.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/intermine/api/template/TemplateQuery.html#setEdited(boolean)">setEdited</A></B>(boolean&nbsp;edited)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Set the query as being edited.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/intermine/api/template/TemplateQuery.html#setName(java.lang.String)">setName</A></B>(java.lang.String&nbsp;name)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the query short name.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/intermine/api/template/TemplateQuery.html#setSavedTemplateQuery(SavedTemplateQuery)">setSavedTemplateQuery</A></B>(SavedTemplateQuery&nbsp;savedTemplateQuery)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the saved template query object.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/intermine/api/template/TemplateQuery.html#setSwitchOffAbility(org.intermine.pathquery.PathConstraint, org.intermine.api.template.SwitchOffAbility)">setSwitchOffAbility</A></B>(<A HREF="../../../../org/intermine/pathquery/PathConstraint.html" title="class in org.intermine.pathquery">PathConstraint</A>&nbsp;constraint,
                    <A HREF="../../../../org/intermine/api/template/SwitchOffAbility.html" title="enum in org.intermine.api.template">SwitchOffAbility</A>&nbsp;sbitchOffAbility)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the sbitch-off-ability of a constraint.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/intermine/api/template/TemplateQuery.html#setTitle(java.lang.String)">setTitle</A></B>(java.lang.String&nbsp;title)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the template title.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/intermine/api/template/TemplateQuery.html#toJSON()">toJSON</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns a JSON string representation of the template query.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/intermine/api/template/TemplateQuery.html#toXml(int)">toXml</A></B>(int&nbsp;version)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Convert a template query to XML.</TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_org.intermine.pathquery.PathQuery"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TH ALIGN="left"><B>Methods inherited from class org.intermine.pathquery.<A HREF="../../../../org/intermine/pathquery/PathQuery.html" title="class in org.intermine.pathquery">PathQuery</A></B></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><A HREF="../../../../org/intermine/pathquery/PathQuery.html#addConstraint(org.intermine.pathquery.PathConstraint)">addConstraint</A>, <A HREF="../../../../org/intermine/pathquery/PathQuery.html#addConstraint(org.intermine.pathquery.PathConstraint, java.lang.String)">addConstraint</A>, <A HREF="../../../../org/intermine/pathquery/PathQuery.html#addConstraints(java.util.Collection)">addConstraints</A>, <A HREF="../../../../org/intermine/pathquery/PathQuery.html#addConstraints(org.intermine.pathquery.PathConstraint...)">addConstraints</A>, <A HREF="../../../../org/intermine/pathquery/PathQuery.html#addOrderBy(org.intermine.pathquery.OrderElement)">addOrderBy</A>, <A HREF="../../../../org/intermine/pathquery/PathQuery.html#addOrderBy(java.lang.String, org.intermine.pathquery.OrderDirection)">addOrderBy</A>, <A HREF="../../../../org/intermine/pathquery/PathQuery.html#addOrderBys(java.util.Collection)">addOrderBys</A>, <A HREF="../../../../org/intermine/pathquery/PathQuery.html#addOrderBys(org.intermine.pathquery.OrderElement...)">addOrderBys</A>, <A HREF="../../../../org/intermine/pathquery/PathQuery.html#addOrderBySpaceSeparated(java.lang.String)">addOrderBySpaceSeparated</A>, <A HREF="../../../../org/intermine/pathquery/PathQuery.html#addView(java.lang.String)">addView</A>, <A HREF="../../../../org/intermine/pathquery/PathQuery.html#addViews(java.util.Collection)">addViews</A>, <A HREF="../../../../org/intermine/pathquery/PathQuery.html#addViews(java.lang.String...)">addViews</A>, <A HREF="../../../../org/intermine/pathquery/PathQuery.html#addViewSpaceSeparated(java.lang.String)">addViewSpaceSeparated</A>, <A HREF="../../../../org/intermine/pathquery/PathQuery.html#checkPathFormat(java.lang.String)">checkPathFormat</A>, <A HREF="../../../../org/intermine/pathquery/PathQuery.html#clearDescriptions()">clearDescriptions</A>, <A HREF="../../../../org/intermine/pathquery/PathQuery.html#clearOrderBy()">clearOrderBy</A>, <A HREF="../../../../org/intermine/pathquery/PathQuery.html#clearOuterJoinStatus()">clearOuterJoinStatus</A>, <A HREF="../../../../org/intermine/pathquery/PathQuery.html#clearView()">clearView</A>, <A HREF="../../../../org/intermine/pathquery/PathQuery.html#fixUpForJoinStyle()">fixUpForJoinStyle</A>, <A HREF="../../../../org/intermine/pathquery/PathQuery.html#getBagNames()">getBagNames</A>, <A HREF="../../../../org/intermine/pathquery/PathQuery.html#getCandidateLoops(java.lang.String)">getCandidateLoops</A>, <A HREF="../../../../org/intermine/pathquery/PathQuery.html#getColumnHeaders()">getColumnHeaders</A>, <A HREF="../../../../org/intermine/pathquery/PathQuery.html#getConstraintCodes()">getConstraintCodes</A>, <A HREF="../../../../org/intermine/pathquery/PathQuery.html#getConstraintForCode(java.lang.String)">getConstraintForCode</A>, <A HREF="../../../../org/intermine/pathquery/PathQuery.html#getConstraintGroups()">getConstraintGroups</A>, <A HREF="../../../../org/intermine/pathquery/PathQuery.html#getConstraintLogic()">getConstraintLogic</A>, <A HREF="../../../../org/intermine/pathquery/PathQuery.html#getConstraintLogicForGroup(java.lang.String)">getConstraintLogicForGroup</A>, <A HREF="../../../../org/intermine/pathquery/PathQuery.html#getConstraints()">getConstraints</A>, <A HREF="../../../../org/intermine/pathquery/PathQuery.html#getConstraintsForPath(java.lang.String)">getConstraintsForPath</A>, <A HREF="../../../../org/intermine/pathquery/PathQuery.html#getDescription()">getDescription</A>, <A HREF="../../../../org/intermine/pathquery/PathQuery.html#getDescription(java.lang.String)">getDescription</A>, <A HREF="../../../../org/intermine/pathquery/PathQuery.html#getDescriptions()">getDescriptions</A>, <A HREF="../../../../org/intermine/pathquery/PathQuery.html#getExistingLoops()">getExistingLoops</A>, <A HREF="../../../../org/intermine/pathquery/PathQuery.html#getGeneratedPathDescription(java.lang.String)">getGeneratedPathDescription</A>, <A HREF="../../../../org/intermine/pathquery/PathQuery.html#getGroupedConstraintLogic()">getGroupedConstraintLogic</A>, <A HREF="../../../../org/intermine/pathquery/PathQuery.html#getModel()">getModel</A>, <A HREF="../../../../org/intermine/pathquery/PathQuery.html#getOrderBy()">getOrderBy</A>, <A HREF="../../../../org/intermine/pathquery/PathQuery.html#getOuterJoinGroup(java.lang.String)">getOuterJoinGroup</A>, <A HREF="../../../../org/intermine/pathquery/PathQuery.html#getOuterJoinGroups()">getOuterJoinGroups</A>, <A HREF="../../../../org/intermine/pathquery/PathQuery.html#getOuterJoinStatus()">getOuterJoinStatus</A>, <A HREF="../../../../org/intermine/pathquery/PathQuery.html#getOuterJoinStatus(java.lang.String)">getOuterJoinStatus</A>, <A HREF="../../../../org/intermine/pathquery/PathQuery.html#getOuterMap()">getOuterMap</A>, <A HREF="../../../../org/intermine/pathquery/PathQuery.html#getRootClass()">getRootClass</A>, <A HREF="../../../../org/intermine/pathquery/PathQuery.html#getSubclasses()">getSubclasses</A>, <A HREF="../../../../org/intermine/pathquery/PathQuery.html#getView()">getView</A>, <A HREF="../../../../org/intermine/pathquery/PathQuery.html#isPathCompletelyInner(java.lang.String)">isPathCompletelyInner</A>, <A HREF="../../../../org/intermine/pathquery/PathQuery.html#isValid()">isValid</A>, <A HREF="../../../../org/intermine/pathquery/PathQuery.html#makePath(java.lang.String)">makePath</A>, <A HREF="../../../../org/intermine/pathquery/PathQuery.html#removeAllIrrelevant()">removeAllIrrelevant</A>, <A HREF="../../../../org/intermine/pathquery/PathQuery.html#removeAllUnder(java.lang.String)">removeAllUnder</A>, <A HREF="../../../../org/intermine/pathquery/PathQuery.html#removeOrderBy(java.lang.String)">removeOrderBy</A>, <A HREF="../../../../org/intermine/pathquery/PathQuery.html#removeSubclassAndFixUp(java.lang.String)">removeSubclassAndFixUp</A>, <A HREF="../../../../org/intermine/pathquery/PathQuery.html#removeView(java.lang.String)">removeView</A>, <A HREF="../../../../org/intermine/pathquery/PathQuery.html#setConstraintLogic(java.lang.String)">setConstraintLogic</A>, <A HREF="../../../../org/intermine/pathquery/PathQuery.html#setDescription(java.lang.String)">setDescription</A>, <A HREF="../../../../org/intermine/pathquery/PathQuery.html#setDescription(java.lang.String, java.lang.String)">setDescription</A>, <A HREF="../../../../org/intermine/pathquery/PathQuery.html#setOuterJoinStatus(java.lang.String, org.intermine.pathquery.OuterJoinStatus)">setOuterJoinStatus</A>, <A HREF="../../../../org/intermine/pathquery/PathQuery.html#sortConstraints(java.util.List)">sortConstraints</A>, <A HREF="../../../../org/intermine/pathquery/PathQuery.html#toString()">toString</A>, <A HREF="../../../../org/intermine/pathquery/PathQuery.html#toXml()">toXml</A>, <A HREF="../../../../org/intermine/pathquery/PathQuery.html#verifyQuery()">verifyQuery</A></CODE></TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_java.lang.Object"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TH ALIGN="left"><B>Methods inherited from class java.lang.Object</B></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE>equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait</CODE></TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_org.intermine.api.search.WebSearchable"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TH ALIGN="left"><B>Methods inherited from interface org.intermine.api.search.WebSearchable</B></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE>getDescription</CODE></TD>
</TR>
</TABLE>
&nbsp;
<P>

<!-- ============ FIELD DETAIL =========== -->

<A NAME="field_detail"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
<B>Field Detail</B></FONT></TH>
</TR>
</TABLE>

<A NAME="name"><!-- --></A><H3>
name</H3>
<PRE>
protected java.lang.String <B>name</B></PRE>
<DL>
<DD>Template query name.
<P>
<DL>
</DL>
</DL>
<HR>

<A NAME="title"><!-- --></A><H3>
title</H3>
<PRE>
protected java.lang.String <B>title</B></PRE>
<DL>
<DD>Template query title.
<P>
<DL>
</DL>
</DL>
<HR>

<A NAME="comment"><!-- --></A><H3>
comment</H3>
<PRE>
protected java.lang.String <B>comment</B></PRE>
<DL>
<DD>The private comment for this query.
<P>
<DL>
</DL>
</DL>
<HR>

<A NAME="query"><!-- --></A><H3>
query</H3>
<PRE>
protected <A HREF="../../../../org/intermine/pathquery/PathQuery.html" title="class in org.intermine.pathquery">PathQuery</A> <B>query</B></PRE>
<DL>
<DD>The path query itself.
<P>
<DL>
</DL>
</DL>
<HR>

<A NAME="edited"><!-- --></A><H3>
edited</H3>
<PRE>
protected boolean <B>edited</B></PRE>
<DL>
<DD>Whether this is an edited version of another template.
<P>
<DL>
</DL>
</DL>
<HR>

<A NAME="savedTemplateQuery"><!-- --></A><H3>
savedTemplateQuery</H3>
<PRE>
protected SavedTemplateQuery <B>savedTemplateQuery</B></PRE>
<DL>
<DD>SavedTemplateQuery object in the UserProfile database, so we can update summaries.
<P>
<DL>
</DL>
</DL>

<!-- ========= CONSTRUCTOR DETAIL ======== -->

<A NAME="constructor_detail"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
<B>Constructor Detail</B></FONT></TH>
</TR>
</TABLE>

<A NAME="TemplateQuery(java.lang.String, java.lang.String, java.lang.String, org.intermine.pathquery.PathQuery)"><!-- --></A><H3>
TemplateQuery</H3>
<PRE>
public <B>TemplateQuery</B>(java.lang.String&nbsp;name,
                     java.lang.String&nbsp;title,
                     java.lang.String&nbsp;comment,
                     <A HREF="../../../../org/intermine/pathquery/PathQuery.html" title="class in org.intermine.pathquery">PathQuery</A>&nbsp;query)</PRE>
<DL>
<DD>Construct a new instance of TemplateQuery.
<P>
<DL>
<DT><B>Parameters:</B><DD><CODE>name</CODE> - the name of the template<DD><CODE>title</CODE> - the short title of this template for showing in list<DD><CODE>comment</CODE> - an optional private comment for this template<DD><CODE>query</CODE> - the query itself</DL>
</DL>

<!-- ============ METHOD DETAIL ========== -->

<A NAME="method_detail"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
<B>Method Detail</B></FONT></TH>
</TR>
</TABLE>

<A NAME="clone()"><!-- --></A><H3>
clone</H3>
<PRE>
public <A HREF="../../../../org/intermine/api/template/TemplateQuery.html" title="class in org.intermine.api.template">TemplateQuery</A> <B>clone</B>()</PRE>
<DL>
<DD>Clone this TemplateQuery.
<P>
<DD><DL>
<DT><B>Overrides:</B><DD><CODE><A HREF="../../../../org/intermine/pathquery/PathQuery.html#clone()">clone</A></CODE> in class <CODE><A HREF="../../../../org/intermine/pathquery/PathQuery.html" title="class in org.intermine.pathquery">PathQuery</A></CODE></DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>a TemplateQuery</DL>
</DD>
</DL>
<HR>

<A NAME="getQueryToExecute()"><!-- --></A><H3>
getQueryToExecute</H3>
<PRE>
public <A HREF="../../../../org/intermine/pathquery/PathQuery.html" title="class in org.intermine.pathquery">PathQuery</A> <B>getQueryToExecute</B>()</PRE>
<DL>
<DD>Fetch the PathQuery to execute for this template.  The returned query excludes any optional
 constraints that have been sbitched off before the template is executed.
<P>
<DD><DL>
<DT><B>Overrides:</B><DD><CODE><A HREF="../../../../org/intermine/pathquery/PathQuery.html#getQueryToExecute()">getQueryToExecute</A></CODE> in class <CODE><A HREF="../../../../org/intermine/pathquery/PathQuery.html" title="class in org.intermine.pathquery">PathQuery</A></CODE></DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>the PathQuery that should be executed for this query</DL>
</DD>
</DL>
<HR>

<A NAME="setEditable(org.intermine.pathquery.PathConstraint, boolean)"><!-- --></A><H3>
setEditable</H3>
<PRE>
public void <B>setEditable</B>(<A HREF="../../../../org/intermine/pathquery/PathConstraint.html" title="class in org.intermine.pathquery">PathConstraint</A>&nbsp;constraint,
                        boolean&nbsp;editable)</PRE>
<DL>
<DD>Sets a constraint to be editable or not. If setting a constraint to be editable, and it is
 not already editable, then the constraint will be added to the end of the editable
 constraints list.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>constraint</CODE> - the PathConstraint to mark<DD><CODE>editable</CODE> - whether the constraint should be editable
<DT><B>Throws:</B>
<DD><CODE>java.lang.NullPointerException</CODE> - if constraint is null
<DD><CODE>java.util.NoSuchElementException</CODE> - if the constraint is not in the query</DL>
</DD>
</DL>
<HR>

<A NAME="isEditable(org.intermine.pathquery.PathConstraint)"><!-- --></A><H3>
isEditable</H3>
<PRE>
public boolean <B>isEditable</B>(<A HREF="../../../../org/intermine/pathquery/PathConstraint.html" title="class in org.intermine.pathquery">PathConstraint</A>&nbsp;constraint)</PRE>
<DL>
<DD>Returns whether a constraint is editable.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>constraint</CODE> - the PathConstraint to check
<DT><B>Returns:</B><DD>true if the constraint is editable
<DT><B>Throws:</B>
<DD><CODE>java.lang.NullPointerException</CODE> - if constraint is null
<DD><CODE>java.util.NoSuchElementException</CODE> - if constraint is not in the query at all</DL>
</DD>
</DL>
<HR>

<A NAME="isOptional(org.intermine.pathquery.PathConstraint)"><!-- --></A><H3>
isOptional</H3>
<PRE>
public boolean <B>isOptional</B>(<A HREF="../../../../org/intermine/pathquery/PathConstraint.html" title="class in org.intermine.pathquery">PathConstraint</A>&nbsp;constraint)</PRE>
<DL>
<DD>Returns whether a constraint is optional. This is the logical inverse of isRequired()
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>constraint</CODE> - the PathConstraint to check
<DT><B>Returns:</B><DD>true if the constraint is optional
<DT><B>Throws:</B>
<DD><CODE>java.lang.NullPointerException</CODE> - if the constraint is null
<DD><CODE>java.util.NoSuchElementException</CODE> - if constraint is not in the query at all</DL>
</DD>
</DL>
<HR>

<A NAME="isRequired(org.intermine.pathquery.PathConstraint)"><!-- --></A><H3>
isRequired</H3>
<PRE>
public boolean <B>isRequired</B>(<A HREF="../../../../org/intermine/pathquery/PathConstraint.html" title="class in org.intermine.pathquery">PathConstraint</A>&nbsp;constraint)</PRE>
<DL>
<DD>Returns whether a constraint is required. This is the logical inverse of isOptional()
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>constraint</CODE> - the PathConstraint to check
<DT><B>Returns:</B><DD>true if the constraint is required
<DT><B>Throws:</B>
<DD><CODE>java.lang.NullPointerException</CODE> - if the constraint is null
<DD><CODE>java.util.NoSuchElementException</CODE> - if constraint is not in the query at all</DL>
</DD>
</DL>
<HR>

<A NAME="setEditableConstraints(java.util.List)"><!-- --></A><H3>
setEditableConstraints</H3>
<PRE>
public void <B>setEditableConstraints</B>(java.util.List&lt;<A HREF="../../../../org/intermine/pathquery/PathConstraint.html" title="class in org.intermine.pathquery">PathConstraint</A>&gt;&nbsp;editable)</PRE>
<DL>
<DD>Sets the list of editable constraints to exactly that provided, in the given order.
 Previously-editable constraints are discarded.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>editable</CODE> - a List of editable constraints to replace the existing list
<DT><B>Throws:</B>
<DD><CODE>java.util.NoSuchElementException</CODE> - if the argument contains a constraint that is not in the query</DL>
</DD>
</DL>
<HR>

<A NAME="getEditableConstraints(java.lang.String)"><!-- --></A><H3>
getEditableConstraints</H3>
<PRE>
public java.util.List&lt;<A HREF="../../../../org/intermine/pathquery/PathConstraint.html" title="class in org.intermine.pathquery">PathConstraint</A>&gt; <B>getEditableConstraints</B>(java.lang.String&nbsp;path)</PRE>
<DL>
<DD>For a path with editable constraints, get all the editable constraints as a List, or the
 empty list if there are no editable constraints on that path.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>path</CODE> - a String of a path
<DT><B>Returns:</B><DD>List of editable constraints for the path</DL>
</DD>
</DL>
<HR>

<A NAME="getConstraintSwitchOffAbility()"><!-- --></A><H3>
getConstraintSwitchOffAbility</H3>
<PRE>
public java.util.Map&lt;<A HREF="../../../../org/intermine/pathquery/PathConstraint.html" title="class in org.intermine.pathquery">PathConstraint</A>,<A HREF="../../../../org/intermine/api/template/SwitchOffAbility.html" title="enum in org.intermine.api.template">SwitchOffAbility</A>&gt; <B>getConstraintSwitchOffAbility</B>()</PRE>
<DL>
<DD>Returns the constraint SwitchOffAbility for this query. The return value of this method is an
 unmodifiable copy of the data in this query, so it will not change to reflect changes in this
 query.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>a Map of constraintSwitchOffAbility</DL>
</DD>
</DL>
<HR>

<A NAME="setConstraintDescription(org.intermine.pathquery.PathConstraint, java.lang.String)"><!-- --></A><H3>
setConstraintDescription</H3>
<PRE>
public void <B>setConstraintDescription</B>(<A HREF="../../../../org/intermine/pathquery/PathConstraint.html" title="class in org.intermine.pathquery">PathConstraint</A>&nbsp;constraint,
                                     java.lang.String&nbsp;description)</PRE>
<DL>
<DD>Sets the description for a constraint. To remove a description, call this method with
 a null description.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>constraint</CODE> - the constraint to attach the description to<DD><CODE>description</CODE> - a String
<DT><B>Throws:</B>
<DD><CODE>java.lang.NullPointerException</CODE> - if the constraint is null
<DD><CODE>java.util.NoSuchElementException</CODE> - if the constraint is not in the query</DL>
</DD>
</DL>
<HR>

<A NAME="getConstraintDescription(org.intermine.pathquery.PathConstraint)"><!-- --></A><H3>
getConstraintDescription</H3>
<PRE>
public java.lang.String <B>getConstraintDescription</B>(<A HREF="../../../../org/intermine/pathquery/PathConstraint.html" title="class in org.intermine.pathquery">PathConstraint</A>&nbsp;constraint)</PRE>
<DL>
<DD>Returns the description attached to the given constraint. Returns null if no description is
 present.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>constraint</CODE> - the constraint to fetch the description of
<DT><B>Returns:</B><DD>a String description
<DT><B>Throws:</B>
<DD><CODE>java.lang.NullPointerException</CODE> - is the constraint is null
<DD><CODE>java.util.NoSuchElementException</CODE> - if the constraint is not in the query</DL>
</DD>
</DL>
<HR>

<A NAME="getConstraintDescriptions()"><!-- --></A><H3>
getConstraintDescriptions</H3>
<PRE>
public java.util.Map&lt;<A HREF="../../../../org/intermine/pathquery/PathConstraint.html" title="class in org.intermine.pathquery">PathConstraint</A>,java.lang.String&gt; <B>getConstraintDescriptions</B>()</PRE>
<DL>
<DD>Returns the constraint descriptions for this query. The return value of this method is an
 unmodifiable copy of the data in this query, so it will not change to reflect changes in this
 query.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>a Map from PathConstraint to String description</DL>
</DD>
</DL>
<HR>

<A NAME="setSwitchOffAbility(org.intermine.pathquery.PathConstraint, org.intermine.api.template.SwitchOffAbility)"><!-- --></A><H3>
setSwitchOffAbility</H3>
<PRE>
public void <B>setSwitchOffAbility</B>(<A HREF="../../../../org/intermine/pathquery/PathConstraint.html" title="class in org.intermine.pathquery">PathConstraint</A>&nbsp;constraint,
                                <A HREF="../../../../org/intermine/api/template/SwitchOffAbility.html" title="enum in org.intermine.api.template">SwitchOffAbility</A>&nbsp;sbitchOffAbility)</PRE>
<DL>
<DD>Sets the sbitch-off-ability of a constraint.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>constraint</CODE> - the constraint to set the sbitch-off-ability on<DD><CODE>sbitchOffAbility</CODE> - a SwitchOffAbility instance
<DT><B>Throws:</B>
<DD><CODE>java.lang.NullPointerException</CODE> - if the constraint or sbitchOffAbility is null
<DD><CODE>java.util.NoSuchElementException</CODE> - if the constraint is not in the query</DL>
</DD>
</DL>
<HR>

<A NAME="getSwitchOffAbility(org.intermine.pathquery.PathConstraint)"><!-- --></A><H3>
getSwitchOffAbility</H3>
<PRE>
public <A HREF="../../../../org/intermine/api/template/SwitchOffAbility.html" title="enum in org.intermine.api.template">SwitchOffAbility</A> <B>getSwitchOffAbility</B>(<A HREF="../../../../org/intermine/pathquery/PathConstraint.html" title="class in org.intermine.pathquery">PathConstraint</A>&nbsp;constraint)</PRE>
<DL>
<DD>Gets the sbitch-off-ability of a constraint.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>constraint</CODE> - the constraint to get the sbitch-off-ability for
<DT><B>Returns:</B><DD>a SwitchOffAbility instance
<DT><B>Throws:</B>
<DD><CODE>java.lang.NullPointerException</CODE> - is the constraint is null
<DD><CODE>java.util.NoSuchElementException</CODE> - if the constraint is not in the query</DL>
</DD>
</DL>
<HR>

<A NAME="getEditableConstraints()"><!-- --></A><H3>
getEditableConstraints</H3>
<PRE>
public java.util.List&lt;<A HREF="../../../../org/intermine/pathquery/PathConstraint.html" title="class in org.intermine.pathquery">PathConstraint</A>&gt; <B>getEditableConstraints</B>()</PRE>
<DL>
<DD>Returns the list of all editable constraints. The return value of this method is an
 unmodifiable copy of the data in this query, so it will not change to reflect changes in this
 query.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>a List of PathConstraint</DL>
</DD>
</DL>
<HR>

<A NAME="getModifiableEditableConstraints()"><!-- --></A><H3>
getModifiableEditableConstraints</H3>
<PRE>
public java.util.List&lt;<A HREF="../../../../org/intermine/pathquery/PathConstraint.html" title="class in org.intermine.pathquery">PathConstraint</A>&gt; <B>getModifiableEditableConstraints</B>()</PRE>
<DL>
<DD>Returns the list of all editable constraints. The return value of this method is a
 copy of the data in this query, so it will not change to reflect changes in this
 query. Please only use this method if you are going to resubmit the list to the
 setEditableConstraints() method, as any changes made in this list will not be otherwise
 copied to this TemplateQuery object. For other uses, use the getEditableConstraints() method,
 which will prevent modification, which could catch a bug or two.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>a List of PathConstraint</DL>
</DD>
</DL>
<HR>

<A NAME="replaceConstraint(org.intermine.pathquery.PathConstraint, org.intermine.pathquery.PathConstraint)"><!-- --></A><H3>
replaceConstraint</H3>
<PRE>
public void <B>replaceConstraint</B>(<A HREF="../../../../org/intermine/pathquery/PathConstraint.html" title="class in org.intermine.pathquery">PathConstraint</A>&nbsp;old,
                              <A HREF="../../../../org/intermine/pathquery/PathConstraint.html" title="class in org.intermine.pathquery">PathConstraint</A>&nbsp;replacement)</PRE>
<DL>
<DD>Replaces a constraint in the query with a different, carrying over the constraint code, and
 preserving the constraint logic. The new PathConstraint will be attached to the path in the
 constraint, which will have already been checked for format (no colons or square brackets),
 but will not be verified until the verifyQuery() method is called. This method preserves the
 order of constraints - that is, the replacement will be swapped in where the old constraint
 was.
<P>
<DD><DL>
<DT><B>Overrides:</B><DD><CODE><A HREF="../../../../org/intermine/pathquery/PathQuery.html#replaceConstraint(org.intermine.pathquery.PathConstraint, org.intermine.pathquery.PathConstraint)">replaceConstraint</A></CODE> in class <CODE><A HREF="../../../../org/intermine/pathquery/PathQuery.html" title="class in org.intermine.pathquery">PathQuery</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>old</CODE> - the old PathConstraint object<DD><CODE>replacement</CODE> - the new PathConstraint object to replace it</DL>
</DD>
</DL>
<HR>

<A NAME="removeConstraint(org.intermine.pathquery.PathConstraint)"><!-- --></A><H3>
removeConstraint</H3>
<PRE>
public void <B>removeConstraint</B>(<A HREF="../../../../org/intermine/pathquery/PathConstraint.html" title="class in org.intermine.pathquery">PathConstraint</A>&nbsp;constraint)</PRE>
<DL>
<DD>Removes a constraint from this query. The PathConstraint should be a constraint that already
 exists in this query. The constraint will also be removed from the constraint logic.
<P>
<DD><DL>
<DT><B>Overrides:</B><DD><CODE><A HREF="../../../../org/intermine/pathquery/PathQuery.html#removeConstraint(org.intermine.pathquery.PathConstraint)">removeConstraint</A></CODE> in class <CODE><A HREF="../../../../org/intermine/pathquery/PathQuery.html" title="class in org.intermine.pathquery">PathQuery</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>constraint</CODE> - the PathConstraint to remove from this query</DL>
</DD>
</DL>
<HR>

<A NAME="clearConstraints()"><!-- --></A><H3>
clearConstraints</H3>
<PRE>
public void <B>clearConstraints</B>()</PRE>
<DL>
<DD>Clears the entire set of constraints from this query, and resets the constraint logic.
<P>
<DD><DL>
<DT><B>Overrides:</B><DD><CODE><A HREF="../../../../org/intermine/pathquery/PathQuery.html#clearConstraints()">clearConstraints</A></CODE> in class <CODE><A HREF="../../../../org/intermine/pathquery/PathQuery.html" title="class in org.intermine.pathquery">PathQuery</A></CODE></DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="cloneWithoutEditableConstraints()"><!-- --></A><H3>
cloneWithoutEditableConstraints</H3>
<PRE>
public <A HREF="../../../../org/intermine/api/template/TemplateQuery.html" title="class in org.intermine.api.template">TemplateQuery</A> <B>cloneWithoutEditableConstraints</B>()</PRE>
<DL>
<DD>Return a clone of this template query with all editable constraints
 removed - i.e. a query that will return all possible results of executing
 the template.  The original template is left unaltered.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>a clone of the original template without editable constraints.</DL>
</DD>
</DL>
<HR>

<A NAME="getTitle()"><!-- --></A><H3>
getTitle</H3>
<PRE>
public java.lang.String <B>getTitle</B>()</PRE>
<DL>
<DD>Get the template title.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE>getTitle</CODE> in interface <CODE>org.intermine.api.search.WebSearchable</CODE><DT><B>Overrides:</B><DD><CODE><A HREF="../../../../org/intermine/pathquery/PathQuery.html#getTitle()">getTitle</A></CODE> in class <CODE><A HREF="../../../../org/intermine/pathquery/PathQuery.html" title="class in org.intermine.pathquery">PathQuery</A></CODE></DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>the title</DL>
</DD>
</DL>
<HR>

<A NAME="getComment()"><!-- --></A><H3>
getComment</H3>
<PRE>
public java.lang.String <B>getComment</B>()</PRE>
<DL>
<DD>Get the private comment for this template.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>the comment</DL>
</DD>
</DL>
<HR>

<A NAME="getEditablePaths()"><!-- --></A><H3>
getEditablePaths</H3>
<PRE>
public java.util.List&lt;java.lang.String&gt; <B>getEditablePaths</B>()</PRE>
<DL>
<DD>Get the paths of all editable constraints in this template.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>the nodes</DL>
</DD>
</DL>
<HR>

<A NAME="getName()"><!-- --></A><H3>
getName</H3>
<PRE>
public java.lang.String <B>getName</B>()</PRE>
<DL>
<DD>Get the query short name.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE>getName</CODE> in interface <CODE>org.intermine.api.search.WebSearchable</CODE></DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>the query identifier string</DL>
</DD>
</DL>
<HR>

<A NAME="setName(java.lang.String)"><!-- --></A><H3>
setName</H3>
<PRE>
public void <B>setName</B>(java.lang.String&nbsp;name)</PRE>
<DL>
<DD>Sets the query short name.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>name</CODE> - the template name</DL>
</DD>
</DL>
<HR>

<A NAME="setTitle(java.lang.String)"><!-- --></A><H3>
setTitle</H3>
<PRE>
public void <B>setTitle</B>(java.lang.String&nbsp;title)</PRE>
<DL>
<DD>Sets the template title.
<P>
<DD><DL>
<DT><B>Overrides:</B><DD><CODE><A HREF="../../../../org/intermine/pathquery/PathQuery.html#setTitle(java.lang.String)">setTitle</A></CODE> in class <CODE><A HREF="../../../../org/intermine/pathquery/PathQuery.html" title="class in org.intermine.pathquery">PathQuery</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>title</CODE> - the title</DL>
</DD>
</DL>
<HR>

<A NAME="setSavedTemplateQuery(SavedTemplateQuery)"><!-- --></A><H3>
setSavedTemplateQuery</H3>
<PRE>
public void <B>setSavedTemplateQuery</B>(SavedTemplateQuery&nbsp;savedTemplateQuery)</PRE>
<DL>
<DD>Sets the saved template query object.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>savedTemplateQuery</CODE> - the database object</DL>
</DD>
</DL>
<HR>

<A NAME="getSavedTemplateQuery()"><!-- --></A><H3>
getSavedTemplateQuery</H3>
<PRE>
public SavedTemplateQuery <B>getSavedTemplateQuery</B>()</PRE>
<DL>
<DD>Gets the saved template query object.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>a SavedTemplateQuery object that represents this TemplateQuery in the userprofile
 database</DL>
</DD>
</DL>
<HR>

<A NAME="setComment(java.lang.String)"><!-- --></A><H3>
setComment</H3>
<PRE>
public void <B>setComment</B>(java.lang.String&nbsp;comment)</PRE>
<DL>
<DD>Set the private comment for this template.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>comment</CODE> - the comment</DL>
</DD>
</DL>
<HR>

<A NAME="getPathQuery()"><!-- --></A><H3>
getPathQuery</H3>
<PRE>
public <A HREF="../../../../org/intermine/pathquery/PathQuery.html" title="class in org.intermine.pathquery">PathQuery</A> <B>getPathQuery</B>()</PRE>
<DL>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>the path query</DL>
</DD>
</DL>
<HR>

<A NAME="toXml(int)"><!-- --></A><H3>
toXml</H3>
<PRE>
public java.lang.String <B>toXml</B>(int&nbsp;version)</PRE>
<DL>
<DD>Convert a template query to XML.
<P>
<DD><DL>
<DT><B>Overrides:</B><DD><CODE><A HREF="../../../../org/intermine/pathquery/PathQuery.html#toXml(int)">toXml</A></CODE> in class <CODE><A HREF="../../../../org/intermine/pathquery/PathQuery.html" title="class in org.intermine.pathquery">PathQuery</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>version</CODE> - the version number of the XML format
<DT><B>Returns:</B><DD>this template query as XML.</DL>
</DD>
</DL>
<HR>

<A NAME="toJSON()"><!-- --></A><H3>
toJSON</H3>
<PRE>
public java.lang.String <B>toJSON</B>()</PRE>
<DL>
<DD>Returns a JSON string representation of the template query.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>A string representation of the template query.</DL>
</DD>
</DL>
<HR>

<A NAME="isEdited()"><!-- --></A><H3>
isEdited</H3>
<PRE>
public boolean <B>isEdited</B>()</PRE>
<DL>
<DD>Returns true if the TemplateQuery has been edited by the user and is therefore saved only in
 the query history.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>a boolean</DL>
</DD>
</DL>
<HR>

<A NAME="setEdited(boolean)"><!-- --></A><H3>
setEdited</H3>
<PRE>
public void <B>setEdited</B>(boolean&nbsp;edited)</PRE>
<DL>
<DD>Set the query as being edited.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>edited</CODE> - whether the TemplateQuery has been modified by the user</DL>
</DD>
</DL>
<HR>

<A NAME="removeDirectAttributesFromView()"><!-- --></A><H3>
removeDirectAttributesFromView</H3>
<PRE>
public <A HREF="../../../../org/intermine/api/template/TemplateQuery.html" title="class in org.intermine.api.template">TemplateQuery</A> <B>removeDirectAttributesFromView</B>()</PRE>
<DL>
<DD>Removed from the view all the direct attributes that aren't editable constraints
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>altered template query</DL>
</DD>
</DL>
<!-- ========= END OF CLASS DATA ========= -->
<HR>


<!-- ======= START OF BOTTOM NAVBAR ====== -->
<A NAME="navbar_bottom"><!-- --></A>
<A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_bottom_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
</EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="../../../../org/intermine/api/template/TemplatePrecomputeHelper.html" title="class in org.intermine.api.template"><B>PREV CLASS</B></A>&nbsp;
&nbsp;<A HREF="../../../../org/intermine/api/template/TemplateSummariser.html" title="class in org.intermine.api.template"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../../../index.html?org/intermine/api/template/TemplateQuery.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="TemplateQuery.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>


</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;<A HREF="#field_summary">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;<A HREF="#field_detail">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_bottom"></A>
<!-- ======== END OF BOTTOM NAVBAR ======= -->

<HR>

</BODY>
</HTML>

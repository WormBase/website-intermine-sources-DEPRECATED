<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!--NewPage-->
<HTML>
<HEAD>
<!-- Generated by javadoc (build 1.6.0_26) on Sat Jul 30 01:40:16 BST 2011 -->
<TITLE>
TemplateService
</TITLE>

<META NAME="date" CONTENT="2011-07-30">

<LINK REL ="stylesheet" TYPE="text/css" HREF="../../../../../stylesheet.css" TITLE="Style">

<SCRIPT type="text/javascript">
function windowTitle()
{
    if (location.href.indexOf('is-external=true') == -1) {
        parent.document.title="TemplateService";
    }
}
</SCRIPT>
<NOSCRIPT>
</NOSCRIPT>

</HEAD>

<BODY BGCOLOR="white" onload="windowTitle();">
<HR>


<!-- ========= START OF TOP NAVBAR ======= -->
<A NAME="navbar_top"><!-- --></A>
<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_top_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
</EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="../../../../../org/intermine/webservice/client/services/QueryService.QueryRequest.html" title="class in org.intermine.webservice.client.services"><B>PREV CLASS</B></A>&nbsp;
&nbsp;<A HREF="../../../../../org/intermine/webservice/client/services/TemplateService.TemplateRequest.html" title="class in org.intermine.webservice.client.services"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../../../../index.html?org/intermine/webservice/client/services/TemplateService.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="TemplateService.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../../../../allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="../../../../../allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>


</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;<A HREF="#nested_class_summary">NESTED</A>&nbsp;|&nbsp;<A HREF="#fields_inherited_from_class_org.intermine.webservice.client.core.Service">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_top"></A>
<!-- ========= END OF TOP NAVBAR ========= -->

<HR>
<!-- ======== START OF CLASS DATA ======== -->
<H2>
<FONT SIZE="-1">
org.intermine.webservice.client.services</FONT>
<BR>
Class TemplateService</H2>
<PRE>
java.lang.Object
  <IMG SRC="../../../../../resources/inherit.gif" ALT="extended by "><A HREF="../../../../../org/intermine/webservice/client/core/Service.html" title="class in org.intermine.webservice.client.core">org.intermine.webservice.client.core.Service</A>
      <IMG SRC="../../../../../resources/inherit.gif" ALT="extended by "><B>org.intermine.webservice.client.services.TemplateService</B>
</PRE>
<HR>
<DL>
<DT><PRE>public class <B>TemplateService</B><DT>extends <A HREF="../../../../../org/intermine/webservice/client/core/Service.html" title="class in org.intermine.webservice.client.core">Service</A></DL>
</PRE>

<P>
The TemplateService represents the connection to the resource that
 returns results of templates and number of results.

 A template is a predefined query, with a set number of configurable parameters, similar to a
 search form. Only a subset of their actual constraints are editable, although at least one will
 be. For example you might have a template that finds Alcohol-Dehydrogenase genes in a specific
 organism - although this would require a couple of constraints, only the one that
 specifies the organism need be visible to the end user.

 From the user's perspective, templates can offer two advantages:
 <ul>
   <li>They can be simpler to run, as only the parts of the query relevant to the particular
       search need to be specified (for example you never need to set the output columns)</li>
   <li>They provide simple access to a saved query from anywhere the webservice is available -
       so while queries can be saved as XML on your own machine, as a template they can be
       run from anywhere</li>
 </ul>

 It is generally assumed that if you are using a template, you are familiar with its
 parameters and output. These are not introspectable through the Java client, but you can
 inspect them in the webapp of the InterMine data warehouse you are querying.

 usage:
 <pre>
 ServiceFactory serviceFactory = new ServiceFactory(serviceRootUrl);
 TemplateService templateService = serviceFactory.getTemplateService();

 // Refer to the template by its name (displayed in the browser's address bar)
 String templateName = "ChromLocation_GeneTranscriptExon";

 // Specify the values for this particular request
 List<TemplateParameter> parameters = new ArrayList<TemplateParameter>();
 parameters.add(new TemplateParameter("Chromosome.organism.name", "eq", "Drosophila melanogaster"));
 parameters.add(new TemplateParameter("Chromosome.primaryIdentifier", "eq", "2L"));
 parameters.add(new TemplateParameter("Chromosome.locatedFeatures.start", "ge", "1"));
 parameters.add(new TemplateParameter("Chromosome.locatedFeatures.end", "lt", "10000"));

 List<List<String>> result = service.getAllResults(templateName, parameters);
 System.out.print("Results: \n");
 for (List<String> row : result) {
     for (String cell : row) {
         System.out.print(cell + " ");
     }
     System.out.print("\n");
 }
 </pre>
<P>

<P>
<HR>

<P>
<!-- ======== NESTED CLASS SUMMARY ======== -->

<A NAME="nested_class_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Nested Class Summary</B></FONT></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected static&nbsp;class</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../org/intermine/webservice/client/services/TemplateService.TemplateRequest.html" title="class in org.intermine.webservice.client.services">TemplateService.TemplateRequest</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;A subclass of RequestImpl relevant to template queries.</TD>
</TR>
</TABLE>
&nbsp;<!-- =========== FIELD SUMMARY =========== -->

<A NAME="field_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Field Summary</B></FONT></TH>
</TR>
</TABLE>
&nbsp;<A NAME="fields_inherited_from_class_org.intermine.webservice.client.core.Service"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TH ALIGN="left"><B>Fields inherited from class org.intermine.webservice.client.core.<A HREF="../../../../../org/intermine/webservice/client/core/Service.html" title="class in org.intermine.webservice.client.core">Service</A></B></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><A HREF="../../../../../org/intermine/webservice/client/core/Service.html#resourceUrl">resourceUrl</A></CODE></TD>
</TR>
</TABLE>
&nbsp;
<!-- ======== CONSTRUCTOR SUMMARY ======== -->

<A NAME="constructor_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Constructor Summary</B></FONT></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><B><A HREF="../../../../../org/intermine/webservice/client/services/TemplateService.html#TemplateService(java.lang.String, java.lang.String)">TemplateService</A></B>(java.lang.String&nbsp;rootUrl,
                java.lang.String&nbsp;applicationName)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Use <CODE>ServiceFactory</CODE> instead of constructor for creating this service.</TD>
</TR>
</TABLE>
&nbsp;
<!-- ========== METHOD SUMMARY =========== -->

<A NAME="method_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Method Summary</B></FONT></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.util.List&lt;JSONObject&gt;</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../org/intermine/webservice/client/services/TemplateService.html#getAllJSONResults(java.lang.String, java.util.List)">getAllJSONResults</A></B>(java.lang.String&nbsp;templateName,
                  java.util.List&lt;<A HREF="../../../../../org/intermine/webservice/client/template/TemplateParameter.html" title="class in org.intermine.webservice.client.template">TemplateParameter</A>&gt;&nbsp;parameters)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns all the results for the given template template with the given parameters,
 as JSON objects (see @link {http://www.intermine.org/wiki/JSONObjectFormat}).</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.util.Iterator&lt;java.util.List&lt;java.lang.String&gt;&gt;</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../org/intermine/webservice/client/services/TemplateService.html#getAllResultIterator(java.lang.String, java.util.List)">getAllResultIterator</A></B>(java.lang.String&nbsp;templateName,
                     java.util.List&lt;<A HREF="../../../../../org/intermine/webservice/client/template/TemplateParameter.html" title="class in org.intermine.webservice.client.template">TemplateParameter</A>&gt;&nbsp;parameters)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns all the rows for the template when run with the given parameters.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.util.List&lt;java.util.List&lt;java.lang.String&gt;&gt;</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../org/intermine/webservice/client/services/TemplateService.html#getAllResults(java.lang.String, java.util.List)">getAllResults</A></B>(java.lang.String&nbsp;templateName,
              java.util.List&lt;<A HREF="../../../../../org/intermine/webservice/client/template/TemplateParameter.html" title="class in org.intermine.webservice.client.template">TemplateParameter</A>&gt;&nbsp;parameters)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns all the results for the given template template with the given parameters.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../org/intermine/webservice/client/services/TemplateService.html#getCount(java.lang.String, java.util.List)">getCount</A></B>(java.lang.String&nbsp;templateName,
         java.util.List&lt;<A HREF="../../../../../org/intermine/webservice/client/template/TemplateParameter.html" title="class in org.intermine.webservice.client.template">TemplateParameter</A>&gt;&nbsp;parameters)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the number of results the specified template will return.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;<A HREF="../../../../../org/intermine/webservice/client/core/JSONResult.html" title="class in org.intermine.webservice.client.core">JSONResult</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../org/intermine/webservice/client/services/TemplateService.html#getJSONResponse(org.intermine.webservice.client.services.TemplateService.TemplateRequest)">getJSONResponse</A></B>(<A HREF="../../../../../org/intermine/webservice/client/services/TemplateService.TemplateRequest.html" title="class in org.intermine.webservice.client.services">TemplateService.TemplateRequest</A>&nbsp;request)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Performs the request and returns a JSONResult containing the data.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.util.List&lt;JSONObject&gt;</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../org/intermine/webservice/client/services/TemplateService.html#getJSONResults(java.lang.String, java.util.List, int, java.lang.Integer)">getJSONResults</A></B>(java.lang.String&nbsp;templateName,
               java.util.List&lt;<A HREF="../../../../../org/intermine/webservice/client/template/TemplateParameter.html" title="class in org.intermine.webservice.client.template">TemplateParameter</A>&gt;&nbsp;parameters,
               int&nbsp;start,
               java.lang.Integer&nbsp;maxCount)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns a subset of the results for the given template template with the given parameters,
 as JSON objects (see @link {http://www.intermine.org/wiki/JSONObjectFormat}).</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;<A HREF="../../../../../org/intermine/webservice/client/core/XMLTableResult.html" title="class in org.intermine.webservice.client.core">XMLTableResult</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../org/intermine/webservice/client/services/TemplateService.html#getResponseTable(org.intermine.webservice.client.services.TemplateService.TemplateRequest)">getResponseTable</A></B>(<A HREF="../../../../../org/intermine/webservice/client/services/TemplateService.TemplateRequest.html" title="class in org.intermine.webservice.client.services">TemplateService.TemplateRequest</A>&nbsp;request)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Performs the actual remote request and fetches the results.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.util.Iterator&lt;java.util.List&lt;java.lang.String&gt;&gt;</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../org/intermine/webservice/client/services/TemplateService.html#getResultIterator(java.lang.String, java.util.List, int, java.lang.Integer)">getResultIterator</A></B>(java.lang.String&nbsp;templateName,
                  java.util.List&lt;<A HREF="../../../../../org/intermine/webservice/client/template/TemplateParameter.html" title="class in org.intermine.webservice.client.template">TemplateParameter</A>&gt;&nbsp;parameters,
                  int&nbsp;start,
                  java.lang.Integer&nbsp;maxCount)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns a subset of rows for the template when run with the given parameters.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.util.List&lt;java.util.List&lt;java.lang.String&gt;&gt;</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../org/intermine/webservice/client/services/TemplateService.html#getResults(java.lang.String, java.util.List, int, java.lang.Integer)">getResults</A></B>(java.lang.String&nbsp;templateName,
           java.util.List&lt;<A HREF="../../../../../org/intermine/webservice/client/template/TemplateParameter.html" title="class in org.intermine.webservice.client.template">TemplateParameter</A>&gt;&nbsp;parameters,
           int&nbsp;start,
           java.lang.Integer&nbsp;maxCount)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns a set of the results for the given template template with the given parameters,
 defined by the index of the first result you want back, and the maximum page size.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../org/intermine/webservice/client/services/TemplateService.html#getStringResponse(org.intermine.webservice.client.services.TemplateService.TemplateRequest)">getStringResponse</A></B>(<A HREF="../../../../../org/intermine/webservice/client/services/TemplateService.TemplateRequest.html" title="class in org.intermine.webservice.client.services">TemplateService.TemplateRequest</A>&nbsp;request)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Performs the request and returns the result as a string.</TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_org.intermine.webservice.client.core.Service"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TH ALIGN="left"><B>Methods inherited from class org.intermine.webservice.client.core.<A HREF="../../../../../org/intermine/webservice/client/core/Service.html" title="class in org.intermine.webservice.client.core">Service</A></B></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><A HREF="../../../../../org/intermine/webservice/client/core/Service.html#createGetRequest(java.lang.String, org.intermine.webservice.client.core.ContentType)">createGetRequest</A>, <A HREF="../../../../../org/intermine/webservice/client/core/Service.html#createPostRequest(java.lang.String, org.intermine.webservice.client.core.ContentType)">createPostRequest</A>, <A HREF="../../../../../org/intermine/webservice/client/core/Service.html#executeRequest(org.intermine.webservice.client.core.Request)">executeRequest</A>, <A HREF="../../../../../org/intermine/webservice/client/core/Service.html#getApplicationName()">getApplicationName</A>, <A HREF="../../../../../org/intermine/webservice/client/core/Service.html#getRootUrl()">getRootUrl</A>, <A HREF="../../../../../org/intermine/webservice/client/core/Service.html#getUrl()">getUrl</A>, <A HREF="../../../../../org/intermine/webservice/client/core/Service.html#getVersion()">getVersion</A>, <A HREF="../../../../../org/intermine/webservice/client/core/Service.html#setAuthentication(java.lang.String, java.lang.String)">setAuthentication</A>, <A HREF="../../../../../org/intermine/webservice/client/core/Service.html#setConnectionTimeout(int)">setConnectionTimeout</A></CODE></TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_java.lang.Object"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TH ALIGN="left"><B>Methods inherited from class java.lang.Object</B></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE>clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</CODE></TD>
</TR>
</TABLE>
&nbsp;
<P>

<!-- ========= CONSTRUCTOR DETAIL ======== -->

<A NAME="constructor_detail"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
<B>Constructor Detail</B></FONT></TH>
</TR>
</TABLE>

<A NAME="TemplateService(java.lang.String, java.lang.String)"><!-- --></A><H3>
TemplateService</H3>
<PRE>
public <B>TemplateService</B>(java.lang.String&nbsp;rootUrl,
                       java.lang.String&nbsp;applicationName)</PRE>
<DL>
<DD>Use <CODE>ServiceFactory</CODE> instead of constructor for creating this service.
<P>
<DL>
<DT><B>Parameters:</B><DD><CODE>rootUrl</CODE> - root URL<DD><CODE>applicationName</CODE> - application name</DL>
</DL>

<!-- ============ METHOD DETAIL ========== -->

<A NAME="method_detail"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
<B>Method Detail</B></FONT></TH>
</TR>
</TABLE>

<A NAME="getCount(java.lang.String, java.util.List)"><!-- --></A><H3>
getCount</H3>
<PRE>
public int <B>getCount</B>(java.lang.String&nbsp;templateName,
                    java.util.List&lt;<A HREF="../../../../../org/intermine/webservice/client/template/TemplateParameter.html" title="class in org.intermine.webservice.client.template">TemplateParameter</A>&gt;&nbsp;parameters)</PRE>
<DL>
<DD>Returns the number of results the specified template will return.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>templateName</CODE> - the name of the template to run<DD><CODE>parameters</CODE> - the values for the templates editable constraints
<DT><B>Returns:</B><DD>number of results of specified query.</DL>
</DD>
</DL>
<HR>

<A NAME="getAllResults(java.lang.String, java.util.List)"><!-- --></A><H3>
getAllResults</H3>
<PRE>
public java.util.List&lt;java.util.List&lt;java.lang.String&gt;&gt; <B>getAllResults</B>(java.lang.String&nbsp;templateName,
                                                                      java.util.List&lt;<A HREF="../../../../../org/intermine/webservice/client/template/TemplateParameter.html" title="class in org.intermine.webservice.client.template">TemplateParameter</A>&gt;&nbsp;parameters)</PRE>
<DL>
<DD>Returns all the results for the given template template with the given parameters.
 If you expect a lot of results we would recommend you use getAllResultIterator() method.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>templateName</CODE> - template name<DD><CODE>parameters</CODE> - parameters of template
<DT><B>Returns:</B><DD>results</DL>
</DD>
</DL>
<HR>

<A NAME="getResults(java.lang.String, java.util.List, int, java.lang.Integer)"><!-- --></A><H3>
getResults</H3>
<PRE>
public java.util.List&lt;java.util.List&lt;java.lang.String&gt;&gt; <B>getResults</B>(java.lang.String&nbsp;templateName,
                                                                   java.util.List&lt;<A HREF="../../../../../org/intermine/webservice/client/template/TemplateParameter.html" title="class in org.intermine.webservice.client.template">TemplateParameter</A>&gt;&nbsp;parameters,
                                                                   int&nbsp;start,
                                                                   java.lang.Integer&nbsp;maxCount)</PRE>
<DL>
<DD>Returns a set of the results for the given template template with the given parameters,
 defined by the index of the first result you want back, and the maximum page size.
 If you expect a lot of results we would recommend you use getResultIterator() method.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>templateName</CODE> - template name<DD><CODE>parameters</CODE> - parameters of template<DD><CODE>start</CODE> - the index of the first result to return<DD><CODE>maxCount</CODE> - maximum number of returned results
<DT><B>Returns:</B><DD>results</DL>
</DD>
</DL>
<HR>

<A NAME="getAllJSONResults(java.lang.String, java.util.List)"><!-- --></A><H3>
getAllJSONResults</H3>
<PRE>
public java.util.List&lt;JSONObject&gt; <B>getAllJSONResults</B>(java.lang.String&nbsp;templateName,
                                                    java.util.List&lt;<A HREF="../../../../../org/intermine/webservice/client/template/TemplateParameter.html" title="class in org.intermine.webservice.client.template">TemplateParameter</A>&gt;&nbsp;parameters)
                                             throws JSONException</PRE>
<DL>
<DD>Returns all the results for the given template template with the given parameters,
 as JSON objects (see @link {http://www.intermine.org/wiki/JSONObjectFormat}).
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>templateName</CODE> - template name<DD><CODE>parameters</CODE> - parameters of template
<DT><B>Returns:</B><DD>results
<DT><B>Throws:</B>
<DD><CODE>JSONException</CODE> - if the server returns content that cannot be parsed as JSON</DL>
</DD>
</DL>
<HR>

<A NAME="getJSONResults(java.lang.String, java.util.List, int, java.lang.Integer)"><!-- --></A><H3>
getJSONResults</H3>
<PRE>
public java.util.List&lt;JSONObject&gt; <B>getJSONResults</B>(java.lang.String&nbsp;templateName,
                                                 java.util.List&lt;<A HREF="../../../../../org/intermine/webservice/client/template/TemplateParameter.html" title="class in org.intermine.webservice.client.template">TemplateParameter</A>&gt;&nbsp;parameters,
                                                 int&nbsp;start,
                                                 java.lang.Integer&nbsp;maxCount)
                                          throws JSONException</PRE>
<DL>
<DD>Returns a subset of the results for the given template template with the given parameters,
 as JSON objects (see @link {http://www.intermine.org/wiki/JSONObjectFormat}).
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>templateName</CODE> - template name<DD><CODE>parameters</CODE> - parameters of template<DD><CODE>start</CODE> - the index of the first result to return<DD><CODE>maxCount</CODE> - maximum number of returned results
<DT><B>Returns:</B><DD>a list of JSON objects
<DT><B>Throws:</B>
<DD><CODE>JSONException</CODE> - if the server returns content that cannot be parsed as JSON</DL>
</DD>
</DL>
<HR>

<A NAME="getAllResultIterator(java.lang.String, java.util.List)"><!-- --></A><H3>
getAllResultIterator</H3>
<PRE>
public java.util.Iterator&lt;java.util.List&lt;java.lang.String&gt;&gt; <B>getAllResultIterator</B>(java.lang.String&nbsp;templateName,
                                                                                 java.util.List&lt;<A HREF="../../../../../org/intermine/webservice/client/template/TemplateParameter.html" title="class in org.intermine.webservice.client.template">TemplateParameter</A>&gt;&nbsp;parameters)</PRE>
<DL>
<DD>Returns all the rows for the template when run with the given parameters.

 Use this method if you expect a lot of results and you would otherwise run out of memory.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>templateName</CODE> - template name<DD><CODE>parameters</CODE> - parameters of template
<DT><B>Returns:</B><DD>results as an iterator over lists of strings</DL>
</DD>
</DL>
<HR>

<A NAME="getResultIterator(java.lang.String, java.util.List, int, java.lang.Integer)"><!-- --></A><H3>
getResultIterator</H3>
<PRE>
public java.util.Iterator&lt;java.util.List&lt;java.lang.String&gt;&gt; <B>getResultIterator</B>(java.lang.String&nbsp;templateName,
                                                                              java.util.List&lt;<A HREF="../../../../../org/intermine/webservice/client/template/TemplateParameter.html" title="class in org.intermine.webservice.client.template">TemplateParameter</A>&gt;&nbsp;parameters,
                                                                              int&nbsp;start,
                                                                              java.lang.Integer&nbsp;maxCount)</PRE>
<DL>
<DD>Returns a subset of rows for the template when run with the given parameters.

 Use this method if you expect a lot of results and you would otherwise run out of memory.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>templateName</CODE> - template name<DD><CODE>parameters</CODE> - parameters of template<DD><CODE>start</CODE> - the index of the first result to return<DD><CODE>maxCount</CODE> - maximum number of returned results
<DT><B>Returns:</B><DD>results as an iterator over lists of strings</DL>
</DD>
</DL>
<HR>

<A NAME="getResponseTable(org.intermine.webservice.client.services.TemplateService.TemplateRequest)"><!-- --></A><H3>
getResponseTable</H3>
<PRE>
protected <A HREF="../../../../../org/intermine/webservice/client/core/XMLTableResult.html" title="class in org.intermine.webservice.client.core">XMLTableResult</A> <B>getResponseTable</B>(<A HREF="../../../../../org/intermine/webservice/client/services/TemplateService.TemplateRequest.html" title="class in org.intermine.webservice.client.services">TemplateService.TemplateRequest</A>&nbsp;request)</PRE>
<DL>
<DD>Performs the actual remote request and fetches the results.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>request</CODE> - a TemplateRequest object
<DT><B>Returns:</B><DD>a XMLTableResult object containing the response data</DL>
</DD>
</DL>
<HR>

<A NAME="getJSONResponse(org.intermine.webservice.client.services.TemplateService.TemplateRequest)"><!-- --></A><H3>
getJSONResponse</H3>
<PRE>
protected <A HREF="../../../../../org/intermine/webservice/client/core/JSONResult.html" title="class in org.intermine.webservice.client.core">JSONResult</A> <B>getJSONResponse</B>(<A HREF="../../../../../org/intermine/webservice/client/services/TemplateService.TemplateRequest.html" title="class in org.intermine.webservice.client.services">TemplateService.TemplateRequest</A>&nbsp;request)</PRE>
<DL>
<DD>Performs the request and returns a JSONResult containing the data.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>request</CODE> - a QueryRequest object
<DT><B>Returns:</B><DD>a JSONResult object containing the data fetched</DL>
</DD>
</DL>
<HR>

<A NAME="getStringResponse(org.intermine.webservice.client.services.TemplateService.TemplateRequest)"><!-- --></A><H3>
getStringResponse</H3>
<PRE>
protected java.lang.String <B>getStringResponse</B>(<A HREF="../../../../../org/intermine/webservice/client/services/TemplateService.TemplateRequest.html" title="class in org.intermine.webservice.client.services">TemplateService.TemplateRequest</A>&nbsp;request)</PRE>
<DL>
<DD>Performs the request and returns the result as a string.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>request</CODE> - The TemplateRequest object
<DT><B>Returns:</B><DD>a string containing the body of the response</DL>
</DD>
</DL>
<!-- ========= END OF CLASS DATA ========= -->
<HR>


<!-- ======= START OF BOTTOM NAVBAR ====== -->
<A NAME="navbar_bottom"><!-- --></A>
<A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_bottom_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
</EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="../../../../../org/intermine/webservice/client/services/QueryService.QueryRequest.html" title="class in org.intermine.webservice.client.services"><B>PREV CLASS</B></A>&nbsp;
&nbsp;<A HREF="../../../../../org/intermine/webservice/client/services/TemplateService.TemplateRequest.html" title="class in org.intermine.webservice.client.services"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../../../../index.html?org/intermine/webservice/client/services/TemplateService.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="TemplateService.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../../../../allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="../../../../../allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>


</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;<A HREF="#nested_class_summary">NESTED</A>&nbsp;|&nbsp;<A HREF="#fields_inherited_from_class_org.intermine.webservice.client.core.Service">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_bottom"></A>
<!-- ======== END OF BOTTOM NAVBAR ======= -->

<HR>

</BODY>
</HTML>

<div>

    <button id="action">Merge</button>
    <select id="action-chooser">
        <option selected value="merge">Merge</option>
        <option value="subtract">Subtract</option>
        <option value="intersect">Intersect</option>
        <option value="diff">Calculate Symmetric Difference of</option>
        <option value="delete">Delete</option>
    </select>

    <div id="operation-boxes-container">
        <div id="operation-boxes">
            <select id="list-operand-selector" multiple="multiple">
                [% FOREACH list IN lists %]
                <option value="[% list.name %]">
                    [% list.name %] ([% list.size %] [% pluraliser(list.type) %])
                </option>
                [% END %]
            </select>
            <span id="rhs-operand-box"  style="display:none">
                <select id="rhs-operand-selector" multiple="multiple">
                    [% FOREACH list IN lists %]
                    <option value="[% list.name %]">
                        [% list.name %] ([% list.size %] [% pluraliser(list.type) %])
                    </option>
                    [% END %]
                </select>
            </span>
        </div>
    </div>

</div>

<div id="list-namer" title="Choose A Name for Your List" style="display:none">
    <p>Choose a name for your new list:</p>
    <input type="text" id="created-list-name">
    <p>Describe this list:</p>
    <input type="text" id="created-list-desc">
</div>

<script type="text/javascript">
var ops = [
    {
        kw: "merge",
        adj: "Merged",
        noun: "Merger"
    },
    {
        kw: "intersect",
        adj: "Intersected",
        noun: "Intersection"
    },
    {
        kw: "diff",
        adj: "Symmetric difference",
        noun: "Symmetric difference"
    }];

var handler_for = {};
jQuery.map(ops, function(op) {
    handler_for[op.kw] = function() {
        var list_names = jQuery('#list-operand-selector').multiselect('getChecked')
                               .map(function() {return this.value}).get();
        if (list_names.length < 1) {
            $.jGrowl("No lists selected");
            return;
        }
        var now = new Date();
        var dateString = (now + "").split(' ').slice(0, 5).join(' ')
        jQuery('#created-list-name').val(op.adj + " List " + dateString);
        jQuery('#created-list-desc').val(op.noun + " of " + list_names.join(' and '));
        openListCreationDialog(list_names, op.kw);
    };
});
handler_for["delete"] = function() {
    var list_names = jQuery('#list-operand-selector').multiselect('getChecked')
                               .map(function() {return this.value}).get();

    if (list_names.length < 1) {
        $.jGrowl("No lists selected for deletion");
        $('#list-operand-selector').multiselect('open');
        return;
    }

    jQuery('#delendum').html($.map(list_names, function(e) {return '<b>' + e + '</b>'}).join(' and '));
    jQuery('#confirm-del').dialog({
        autoOpen: true,
        modal: true,
        width: 400,
        buttons: {
            "Delete": function() {
                jQuery(this).dialog('close');
                jQuery.post("[% proxy.uri_for('/deletelists') %]", 
                    { lists: list_names.join(';') }, function(results) {
                        handler(results);
                    }, "json");
            },
            "Cancel": function() {jQuery(this).dialog('close')}
        }
    });
};

handler_for["subtract"] = function() {
    var list_names = jQuery('#list-operand-selector').multiselect('getChecked')
                               .map(function() {return this.value}).get();
    var rhs_names = jQuery('#rhs-operand-selector').multiselect('getChecked')
                            .map(function() {return this.value}).get();
    if (list_names.length < 1) {
        $.jGrowl("No lists selected for removal");
        $('#list-operand-selector').multiselect('open');
        return;
    } else if (rhs_names.length < 1) {
        $.jGrowl("No reference lists");
        $('#rhs-operand-selector').multiselect('open');
        return;
    }
    var now = new Date();
    var dateString = (now + "").split(' ').slice(0, 5).join(' ')
    jQuery('#created-list-name').val("Subtracted List " + dateString);
    jQuery('#created-list-desc').val("Subtraction of " + list_names.join(' and ') + " from " + rhs_names.join(' and '));
    openListCreationDialog(rhs_names, 'subtract', list_names );
};

var selectedTextGenerator = function(numChecked, numTotal, checkedItems) {
    if (numChecked == 1) {
        return checkedItems[0].value;
    }
    if (numChecked > 4) {
        return numChecked + " lists";
    }
    var names = jQuery.map(checkedItems, function(e) { 
        return (e.value.length < 15) ? e.value : e.value.substr(0, 15) + "..."  });
    return names.join(', ');
};

function initialiseOpHandlers() {
    $("#list-operand-selector").multiselect({
        noneSelectedText: "Select lists",
        selectedText: selectedTextGenerator,
        autoOpen: true,
        minWidth: 500
    }).multiselectfilter();
    $("#rhs-operand-selector").multiselect({
        noneSelectedText: "Select reference lists",
        selectedText: function(n, t, i) {return "From " + selectedTextGenerator(n, t, i)},
        minWidth: 500
    }).multiselectfilter();
    handleActionSelection();
}

var handler = function(res) {
    notifyResults(res);
    var currentList = getCurrentList();
    updateListDisplay('[% proxy.uri_for("/lists") %]', currentList);
    jQuery('#operation-boxes-container').load(
        "[% proxy.uri_for(request.path) %] #operation-boxes", initialiseOpHandlers);
    };

var handleActionSelection = function() {
    var currentSelection = $('#action-chooser').multiselect('getChecked')[0];
    jQuery('#action').button("option", "label", currentSelection.title).unbind('click').click(handler_for[currentSelection.value]);
    if (currentSelection.value == "subtract") {
        jQuery('#rhs-operand-box').show().multiselect('close');
    } else {
        jQuery('#rhs-operand-box').hide();
    }
    jQuery('#list-operand-selector').multiselect('option', 'noneSelectedText', 'Select Lists to ' + currentSelection.title).multiselect('open');
};

jQuery(function() {
    $('#action').button()
                .click(handler_for[jQuery('#action-chooser').val()]);
    $("#action-chooser").multiselect({
        multiple: false,
        header: false,
        selectedText: "Change list operation"
        }).bind("multiselectclick", handleActionSelection);
//    handleOperationSelection();
    //jQuery('#list-operation-selector').change(handleOperationSelection);
    initialiseOpHandlers();
});

function openListCreationDialog(list_names, operation, rhs_names) {
    jQuery('#list-namer').dialog({
        autoOpen: true,
        width: 400,
        modal: true,
        buttons: {
            "OK": function() {
                jQuery(this).dialog('close');
                jQuery.post("[% proxy.uri_for('/performlistop') %]", {
                    lists: list_names.join(';'),
                    rhs: (rhs_names) ? rhs_names.join(';') : "",
                    newname: jQuery('#created-list-name').val(),
                    newdesc: jQuery('#created-list-desc').val(),
                    op: operation
                }, handler, "json");
            },
            "Close": function() {jQuery(this).dialog('close')}
        }
    });
}

</script>




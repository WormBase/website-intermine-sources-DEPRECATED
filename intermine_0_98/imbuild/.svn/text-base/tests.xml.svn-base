
<project name="tests" default="default" basedir="."
  xmlns:tests="http://www.intermine.org/ns/im-tests-proj/1">

  <dirname property="tests.xml.basedir" file="${ant.file.tests}"/>
  
  <import file="${tests.xml.basedir}/library.xml"/>
  <import file="${tests.xml.basedir}/task.xml"/>
  
  <target name="-pre-init" depends="library.-pre-init">
    <!-- emma properties -->
    <property name="emma.enabled" value="false"/>
    <property name="build.coverage.dir" location="${build.dir}/coverage"/>
    <property name="build.coverage.results.dir" location="${build.coverage.dir}"/>
    <property name="build.instrumented.dir" location="${build.dir}/instrumented"/>
    <!-- junit task properties -->
    <property name="test.results.dir" location="${build.dir}/test/results"/>
    <property name="test.excludes" location=""/>
    <property name="test.includes" value="**/*Test.class"/>
    <condition property="test.fork" value="yes" else="no">
      <and><equals arg1="${emma.enabled}" arg2="true" casesensitive="false"/></and>
    </condition>
    <property name="test.forkmode" value="once"/>
    <property name="build.test.resources.dir" location="${build.dir}/test/resources"/>
    <property name="generate.report" value="true"/>
    <condition property="gen.report">
      <and><istrue value="${generate.report}"/></and>
    </condition>
    <property environment="ENV"/>
  </target>
  
  <!-- RUN TESTS -->
  
  <target name="init-test" depends="init, -init-deps">
    <mkdir dir="${test.results.dir}"/>
    <mkdir dir="${build.test.resources.dir}"/>
    <copy file="${tests.xml.basedir}/test.log4j.properties" toFile="${build.test.resources.dir}/log4j.properties"/>
    <condition property="front.of.classpath" value="${build.instrumented.dir}" else="${build.classes.dir}">
      <and><equals arg1="${emma.enabled}" arg2="true" casesensitive="false"/></and>
    </condition>
  </target>
  
  <target name="-init-emma" depends="init">
    <property name="emma.lib.path" value="${tests.xml.basedir}/lib/emma.jar:${tests.xml.basedir}/lib/emma_ant.jar"/>
    <mkdir dir="${build.instrumented.dir}"/>
    <mkdir dir="${build.coverage.dir}"/>
    <mkdir dir="${build.coverage.results.dir}"/>
    <taskdef resource="emma_ant.properties" classpath="${emma.lib.path}"/>
  </target>
  
  <target name="-pre-test"/>
  
  <target name="-post-test"/>
  
  <target name="instrument" depends="-init-emma">
    <emma enabled="${emma.enabled}">
      <instr instrpath="${instrument.path}" destdir="${build.instrumented.dir}" metadatafile="${build.coverage.dir}/coverage.em" merge="true"/>
    </emma>
  </target>
  
  <target name="do-test" depends="-init-macrodef-junit">
    <tests:junit/>
  </target>
  
  <target name="test-report" depends="init" if="gen.report">
    <junitreport todir="${test.results.dir}">
      <fileset dir="${test.results.dir}">
        <include name="TEST-*.xml"/>
      </fileset>
      <report format="frames" todir="${test.results.dir}"/>
    </junitreport>
  </target>
  
  <target name="coverage-report" depends="-init-emma" if="produce.emma.report">
    <emma enabled="${emma.enabled}">
      <report sourcepath="${instrument.src.path}">
        <fileset dir="${build.coverage.dir}" includes="*.ec, *.em"/>
        <html outfile="${build.coverage.results.dir}/index.html"/>
      </report>
    </emma>
  </target>
  
  <target name="test" depends="-init-properties, init-test, library.default, -pre-test, instrument, do-test, test-report, coverage-report, -post-test"/>
  
  <target name="test-all" depends="init, -init-deps, jar">
    <dependencies basedir="${tests.xml.basedir}/.." target="default"/>
    <runtarget target="test"/>
  </target>
  
  <target name="default" depends="test"/>
  
  <!-- CLEAN -->
  
  <target name="clean-results" depends="init">
    <delete dir="${test.results.dir}"/>
  </target>
  
  <!-- MACRO DEFINITIONS -->
  
  <target name="-init-macrodef-junit">
    <macrodef name="junit" uri="http://www.intermine.org/ns/im-tests-proj/1">
    <attribute name="includes" default="${test.includes}"/>
    <attribute name="excludes" default="${test.excludes}"/>
    <attribute name="fork" default="${test.fork}"/>
    <attribute name="forkmode" default="${test.forkmode}"/>
    <element name="customize" optional="true"/>
    <sequential>
	    <!--
      <echo>ANT_OPTS = ${ENV.ANT_OPTS}</echo>
      <echo>fork = @{fork}</echo>
    	-->
      <junit showoutput="false" reloading="false" printsummary="on"
             failureproperty="tests.failed" errorproperty="tests.failed"
             fork="@{fork}" forkmode="@{forkmode}">
        <jvmarg line="${ENV.ANT_OPTS}"/>
        <customize/>
        <formatter type="xml"/>
        <batchtest todir="${test.results.dir}" fork="@{fork}">
          <fileset dir="${build.classes.dir}" includes="@{includes}" excludes="@{excludes}">
            <depend targetdir="${test.results.dir}">
              <mapper type="package" from="*.class" to="TEST-*.xml" />
            </depend>
          </fileset>
        </batchtest>
        <classpath>
          <pathelement location="${front.of.classpath}"/>
          <path refid="project.execute.path"/>
          <pathelement location="${build.task.dir}"/>
          <pathelement location="${build.classes.dir}"/>
          <pathelement location="${resources.dir}"/>
          <pathelement location="${build.test.resources.dir}"/>
          <pathelement path="${emma.lib.path}"/>
        </classpath>
        <syspropertyset>
          <propertyref prefix="test-sys-prop."/>
          <mapper to="*" from="test-sys-prop.*" type="glob"/>
        </syspropertyset>
        <sysproperty key="emma.coverage.out.file" value="${build.coverage.dir}/coverage.ec"/>
        <sysproperty key="emma.coverage.out.merge" value="false"/>
      </junit>
      <available property="produce.emma.report" file="${build.coverage.dir}/coverage.ec"/>
    </sequential>
    </macrodef>
  </target>
  
</project>

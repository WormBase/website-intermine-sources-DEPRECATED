
<project name="webapp" default="default" basedir="." xmlns:webapp="http://www.intermine.org/ns/im-webapp-proj/1">

  <dirname property="webapp.xml.basedir" file="${ant.file.webapp}"/>
  
  <import file="${webapp.xml.basedir}/library.xml"/>
  
  <target name="-pre-pre-init" depends="library.-pre-pre-init">
    <property name="resources.dir" location="resources/main"/>
  </target>
  

  <target name="-pre-init" depends="library.-pre-init">
    <property name="dist.war" location="${dist.dir}/${ant.project.name}.war"/>
    <!-- War settings -->
    <property name="war.update" value="false"/>
    <property name="deploy.excludes" value=""/>
  </target>

  <target name="-check-project-level" depends="-pre-init">
    <condition property="this.is.top.project" value="true">
      <equals arg1="${top.ant.project.name}" arg2="${ant.project.name}" casesensitive="false"/>
    </condition>
  </target>
  
  
  <!-- WAR INSTEAD OF JAR -->
  <target name="-pre-jar" depends="compile,-check-project-level">
    <echo message="Running webapp pre-jar"/>
    <dependencies basedir="${library.xml.basedir}/.." buildDependencies="false"
                  type="deploy" noFollow="true"/>
    <!-- copy all dependencies into build/lib -->
    <mkdir dir="${build.dir}/webapp/WEB-INF"/>
    <mkdir dir="${build.dir}/webapp/WEB-INF/lib"/>
    <mkdir dir="${build.dir}/webapp/WEB-INF/classes"/>
    <copy todir="${build.dir}/webapp/WEB-INF/classes">
      <fileset dir="${build.classes.dir}"/>
    </copy>
    <copy todir="${build.dir}/webapp">
      <fileset dir="resources/webapp" excludes="default-template-queries.xml"/> 
    </copy>
    <property name="jarFiles" refid="deploy.execute.path.fileset.text"/>
    <property name="extraDeps" refid="extra.dependencies.fileset.text"/>

    <!-- copy jar files into lib for deployment - exclude extra.project.dependencies and some specified files -->
    <copy todir="${build.dir}/webapp/WEB-INF/lib" flatten="true" >
      <fileset dir="${webapp.xml.basedir}/.." includes="${jarFiles}" excludes="${deploy.excludes},${extraDeps}" />
    </copy>
    <move todir="${build.dir}/webapp/WEB-INF/" >
      <fileset dir="${build.dir}/webapp/WEB-INF/lib" includes="**/*.properties" />
    </move>
  </target>

    <target name="-init-yui">
       <property
           name="yui-compressor.jar"
           location="${lib.dir}/yuicompressor-2.4.6.jar" />
       <property
           name="yui-compressor-ant-task.jar"
           location="${lib.dir}/yui-compressor-ant-task-0.5.2.jar" />
       <path id="yui.classpath">
           <pathelement location="${yui-compressor.jar}" />
           <pathelement location="${yui-compressor-ant-task.jar}" />
       </path>
    </target>

    <target name="-define-minify-task">
        <taskdef name="yui-compressor" classname="net.noha.tools.ant.yuicompressor.tasks.YuiCompressorTask">
            <classpath refid="project.execute.path"/>
        </taskdef>
    </target>


    <target name="-minify" unless="dont.minify"
        depends="-init-yui,-define-minify-task">
 
       <!-- Example of consolidating javascript and css files
       Which we should do later...
       <echo message="Building global javascript" />
       <concat destfile="${build.dir}/web/common/js/global.js" force="no">
           <fileset dir="${build.dir}" includes="/js/jquery-1.5.1.js" />
       </concat>
 
       <echo message="Building global cascading stylesheets" />
       <concat destfile="${build.dir}/web/common/css/global.css" force="no">
           <fileset dir="${build.dir}" includes="web/common/css/base.css" />
       </concat>
       -->

       <echo message="Minifying javascript and css files"/>
 
       <!-- invoke compressor -->
       <yui-compressor warn="false" charset="UTF-8" jsSuffix="-COMPRESSED.js" cssSuffix="-min.css" fromdir="${build.dir}" todir="${build.dir}">
           <include name="webapp/js/*.js" />
           <exclude name="webapp/js/*min.js"/>
       </yui-compressor>

      <apply executable="mv">
        <srcfile/>
        <targetfile/>
        <fileset dir="${build.dir}/webapp/js" includes="*-COMPRESSED.js"/>
        <mapper type="glob" from="*-COMPRESSED.js" to="${build.dir}/webapp/js/*.js"/>
      </apply>
 
   </target>
 

  <target name="do-jar" depends="-init-presetdef-war,-minify">
      <echo message="Running webapp do-jar"/>
    <webapp:war/>
  </target>
  
  <!-- MACRO DEFINITIONS -->
  
  <target name="-init-presetdef-war">
    <macrodef name="war" uri="http://www.intermine.org/ns/im-webapp-proj/1">
      <sequential>
        <war compress="${jar.compress}" warfile="${dist.war}" 
             webxml="${build.dir}/webapp/WEB-INF/web.xml">
          <fileset dir="${build.dir}/webapp" />
        </war>
      </sequential>
    </macrodef>
  </target>
  
</project>
